{"version":3,"file":"onc.esm.js","sources":["../src/shuffle.js","../src/elapsed-timer.js","../src/entropy-string/lcm.js","../src/entropy-string/char-set.js","../src/entropy-string/entropy.js","../src/entropy-string/random.js","../src/object-id.js","../src/random-string.js","../src/rbac.js","../src/unique-id.js"],"sourcesContent":["let _rng = Math.random;\n\nfunction rng() {\n  return _rng();\n}\n\n// Use Fisher–Yates shuffle http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n// see also http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n// to get random permutation from a finite set.\nfunction getRandomSubarray(arr, size) {\n  const shuffled = [];\n  let index = 0;\n  let rand;\n  arr.forEach(value => {\n    rand = Math.floor((index++ + 1) * _rng());\n    shuffled[index - 1] = shuffled[rand];\n    shuffled[rand] = value;\n  });\n\n  // return the part we want\n  return size ? shuffled.slice(0, size) : shuffled;\n}\n\n// Use Fisher–Yates shuffle http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n// see also http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n// to get random permutation from a finite set.\nfunction getRandomSubarrayAlt(arr, size) {\n  const shuffled = arr.slice();\n  let count = arr.length;\n  let rand;\n  let temp;\n  while (count) {\n    rand = (_rng() * count--) | 0;\n    temp = arr[count];\n    arr[count] = arr[rand];\n    arr[rand] = temp;\n  }\n\n  // return the part we want\n  return size ? shuffled.slice(0, size) : shuffled;\n}\n\nfunction setRng(newrng) {\n  _rng = newrng;\n}\n\nexport default {\n  getRandomSubarray,\n  getRandomSubarrayAlt,\n  setRng,\n  rng,\n};\n\nexport { setRng, rng, getRandomSubarray, getRandomSubarrayAlt };\n","const _now = (function (self) {\n  return self.performance && self.performance.now\n    ? function () {\n        return self.performance.now();\n      }\n    : function () {\n        return Date.now();\n      };\n})(typeof self !== 'undefined' ? self : window);\n\nexport class ElapsedTimer {\n  /**\n   * Start the timer\n   */\n  start() {\n    this.startDate = new Date();\n    this.startTime = _now();\n  }\n\n  /**\n   *\n   * @param {Number} precision\n   * @returns {Number} Elapsed time (ms) to precision decimal places\n   */\n  elapsed(precision = 2) {\n    return Number(this.elapsedFull().toFixed(precision));\n  }\n\n  /**\n   *\n   * @returns Elapsed time in ms\n   */\n  elapsedFull() {\n    return _now() - this.startTime;\n  }\n}\n","const _gcd = (a, b) => {\n  while (b != 0) {\n    [a, b] = [b, a % b];\n  }\n  return Math.abs(a);\n};\n\nexport default (a, b) => {\n  return (a / _gcd(a, b)) * b;\n};\n","import lcm from './lcm.js';\n\nconst propertyMap = new WeakMap();\n\nconst BITS_PER_BYTE = 8;\n\nexport default class CharSet {\n  constructor(chars) {\n    if (!(typeof chars === 'string' || chars instanceof String)) {\n      throw new TypeError('Invalid chars: Must be string');\n    }\n    const length = chars.length;\n    if (![2, 4, 8, 16, 32, 64].includes(length)) {\n      throw new Error('Invalid char count: must be one of 2,4,8,16,32,64');\n    }\n    const bitsPerChar = Math.floor(Math.log2(length));\n    // Ensure no repeated characters\n    for (let index = 0; index < length; index++) {\n      const c = chars.charAt(index);\n      for (let index_ = index + 1; index_ < length; index_++) {\n        if (c === chars.charAt(index_)) {\n          throw new Error('Characters not unique');\n        }\n      }\n    }\n    const privProps = {\n      chars,\n      bitsPerChar,\n      length,\n      ndxFn: _ndxFunction(bitsPerChar),\n      charsPerChunk: lcm(bitsPerChar, BITS_PER_BYTE) / bitsPerChar,\n    };\n    propertyMap.set(this, privProps);\n  }\n\n  getChars() {\n    return propertyMap.get(this).chars;\n  }\n\n  getBitsPerChar() {\n    return propertyMap.get(this).bitsPerChar;\n  }\n\n  getNdxFn() {\n    return propertyMap.get(this).ndxFn;\n  }\n\n  getCharsPerChunk() {\n    return propertyMap.get(this).charsPerChunk;\n  }\n\n  length() {\n    return propertyMap.get(this).length;\n  }\n\n  bytesNeeded(entropyBits) {\n    const count = Math.ceil(entropyBits / this.bitsPerChar());\n    return Math.ceil((count * this.bitsPerChar()) / BITS_PER_BYTE);\n  }\n\n  // Aliases\n  chars() {\n    return this.getChars();\n  }\n  ndxFn() {\n    return this.getNdxFn();\n  }\n  bitsPerChar() {\n    return this.getBitsPerChar();\n  }\n}\n\nconst _ndxFunction = bitsPerChar => {\n  // If BITS_PER_BYTEs is a multiple of bitsPerChar, we can slice off an integer number\n  // of chars per byte.\n  if (lcm(bitsPerChar, BITS_PER_BYTE) === BITS_PER_BYTE) {\n    return function (chunk, slice, bytes) {\n      const lShift = bitsPerChar;\n      const rShift = BITS_PER_BYTE - bitsPerChar;\n      return ((bytes[chunk] << (lShift * slice)) & 0xff) >> rShift;\n    };\n  }\n\n  // Otherwise, while slicing off bits per char, we will possibly straddle a couple\n  // of bytes, so a bit more work is involved\n  const slicesPerChunk = lcm(bitsPerChar, BITS_PER_BYTE) / BITS_PER_BYTE;\n  return function (chunk, slice, bytes) {\n    const bNumber = chunk * slicesPerChunk;\n\n    const offset = (slice * bitsPerChar) / BITS_PER_BYTE;\n    const lOffset = Math.floor(offset);\n    const rOffset = Math.ceil(offset);\n\n    const rShift = BITS_PER_BYTE - bitsPerChar;\n    const lShift = (slice * bitsPerChar) % BITS_PER_BYTE;\n\n    let ndx = ((bytes[bNumber + lOffset] << lShift) & 0xff) >> rShift;\n\n    const rShiftIt = ((rOffset + 1) * BITS_PER_BYTE - (slice + 1) * bitsPerChar) % BITS_PER_BYTE;\n    if (rShift < rShiftIt) {\n      ndx += bytes[bNumber + rOffset] >> rShiftIt;\n    }\n    return ndx;\n  };\n};\n\nexport const charSet64 = new CharSet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_');\nexport const charSet32 = new CharSet('2346789bdfghjmnpqrtBDFGHJLMNPQRT');\nexport const charSet16 = new CharSet('0123456789abcdef');\nexport const charSet8 = new CharSet('01234567');\nexport const charSet4 = new CharSet('ATCG');\nexport const charSet2 = new CharSet('01');\n","const _log2 = Math.log2;\n\nconst _totalOf = (numberStrings, log2Risk) => {\n  if (numberStrings == 0) {\n    return 0;\n  }\n\n  const N = numberStrings < 1000 ? _log2(numberStrings) + _log2(numberStrings - 1) : 2 * _log2(numberStrings);\n  return N + log2Risk - 1;\n};\n\nconst bits = (total, risk) => {\n  if (total == 0) {\n    return 0;\n  }\n  return _totalOf(total, _log2(risk));\n};\n\nexport default {\n  bits,\n};\n","import CharSet, { charSet32 } from './char-set.js';\n\nconst propertyMap = new WeakMap();\n\nconst BITS_PER_BYTE = 8;\n\nexport default class {\n  constructor(argument) {\n    let charSet;\n    if (argument === undefined) {\n      charSet = charSet32;\n    } else if (argument instanceof CharSet) {\n      charSet = argument;\n    } else if (typeof argument === 'string' || argument instanceof String) {\n      charSet = new CharSet(argument);\n    } else {\n      throw new TypeError('Invalid arg: must be either valid CharSet or valid chars');\n    }\n    const hideProps = {\n      charSet,\n    };\n    propertyMap.set(this, hideProps);\n  }\n\n  smallID(charSet = propertyMap.get(this).charSet) {\n    return this.string(29, charSet);\n  }\n\n  mediumID(charSet = propertyMap.get(this).charSet) {\n    return this.string(69, charSet);\n  }\n\n  largeID(charSet = propertyMap.get(this).charSet) {\n    return this.string(99, charSet);\n  }\n\n  sessionID(charSet = propertyMap.get(this).charSet) {\n    return this.string(128, charSet);\n  }\n\n  token(charSet = propertyMap.get(this).charSet) {\n    return this.string(256, charSet);\n  }\n\n  string(entropyBits, charSet = propertyMap.get(this).charSet) {\n    const bytesNeeded = charSet.bytesNeeded(entropyBits);\n    return this.stringWithBytes(entropyBits, _cryptoBytes(bytesNeeded), charSet);\n  }\n\n  stringRandom(entropyBits, charSet = propertyMap.get(this).charSet) {\n    const bytesNeeded = charSet.bytesNeeded(entropyBits);\n    return this.stringWithBytes(entropyBits, _randomBytes(bytesNeeded), charSet);\n  }\n\n  stringWithBytes(entropyBits, bytes, charSet = propertyMap.get(this).charSet) {\n    return _stringWithBytes(entropyBits, bytes, charSet);\n  }\n\n  bytesNeeded(entropyBits, charSet = propertyMap.get(this).charSet) {\n    return charSet.bytesNeeded(entropyBits);\n  }\n\n  chars() {\n    return propertyMap.get(this).charSet.chars();\n  }\n\n  use(charSet) {\n    if (!(charSet instanceof CharSet)) {\n      throw new TypeError('Invalid CharSet');\n    }\n    propertyMap.get(this).charSet = charSet;\n  }\n\n  useChars(chars) {\n    if (!(typeof chars === 'string' || chars instanceof String)) {\n      throw new TypeError('Invalid chars: Must be string');\n    }\n    this.use(new CharSet(chars));\n  }\n}\n\nconst _stringWithBytes = (entropyBits, bytes, charSet) => {\n  if (entropyBits <= 0) {\n    return '';\n  }\n\n  const bitsPerChar = charSet.getBitsPerChar();\n  const count = Math.ceil(entropyBits / bitsPerChar);\n  if (count <= 0) {\n    return '';\n  }\n\n  const need = Math.ceil(count * (bitsPerChar / BITS_PER_BYTE));\n  if (bytes.length < need) {\n    throw new Error('Insufficient bytes: need ' + need + ' and got ' + bytes.length);\n  }\n\n  const charsPerChunk = charSet.getCharsPerChunk();\n  const chunks = Math.floor(count / charsPerChunk);\n  const partials = count % charsPerChunk;\n\n  const ndxFunction = charSet.getNdxFn();\n  const chars = charSet.getChars();\n\n  let string = '';\n  for (let chunk = 0; chunk < chunks; chunk++) {\n    for (let slice = 0; slice < charsPerChunk; slice++) {\n      const ndx = ndxFunction(chunk, slice, bytes);\n      string += chars[ndx];\n    }\n  }\n  for (let slice = 0; slice < partials; slice++) {\n    const ndx = ndxFunction(chunks, slice, bytes);\n    string += chars[ndx];\n  }\n  return string;\n};\n\nconst _cryptoBytes = count => {\n  const buffer = new Uint8Array(count);\n  window.crypto.getRandomValues(buffer);\n  return buffer;\n};\n\nconst _randomBytes = count => {\n  const BYTES_USED_PER_RANDOM_CALL = 6;\n  const randCount = Math.ceil(count / BYTES_USED_PER_RANDOM_CALL);\n\n  const buffer = new Uint8Array(count);\n  const dataView = new DataView(new ArrayBuffer(BITS_PER_BYTE));\n  for (let rNumber = 0; rNumber < randCount; rNumber++) {\n    dataView.setFloat64(0, Math.random());\n    for (let n = 0; n < BYTES_USED_PER_RANDOM_CALL; n++) {\n      const fByteNumber = _endianByteNumber[n];\n      const bByteNumber = rNumber * BYTES_USED_PER_RANDOM_CALL + n;\n      if (bByteNumber < count) {\n        buffer[bByteNumber] = dataView.getUint8(fByteNumber);\n      }\n    }\n  }\n  return buffer;\n};\n\nconst _endianByteNumber = (() => {\n  const buf32 = new Uint32Array(1);\n  const buf8 = new Uint8Array(buf32.buffer);\n  buf32[0] = 0xff;\n  return buf8[0] === 0xff ? [2, 3, 4, 5, 6, 7] : [0, 1, 2, 3, 6, 7];\n})();\n","let increment = 0;\nconst pid = Math.floor(Math.random() * 32_767);\nconst machine = Math.floor(Math.random() * 16_777_216);\n\n// eslint-disable-next-line unicorn/no-document-cookie\ndocument.cookie = `mongoMachineId=;expires=${new Date().toUTCString()};path=/;domain=${location.hostname}`;\n\nif (typeof localStorage !== 'undefined') {\n  localStorage.removeItem('mongoMachineId');\n}\n\n// if (typeof localStorage !== 'undefined') {\n//   const mongoMachineId = parseInt(localStorage.mongoMachineId);\n//   if (mongoMachineId >= 0 && mongoMachineId <= 16777215) {\n//     machine = Math.floor(localStorage.mongoMachineId);\n//   }\n//   // Just always stick the value in.\n//   localStorage.mongoMachineId = machine;\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// } else {\n//   const cookieList = document.cookie.split('; ');\n//   for (const cookie of cookieList) {\n//     const parts = cookie.split('=');\n//     if (parts[0] === 'mongoMachineId' && Number(parts[1]) >= 0 && Number(parts[1]) <= 16777215) {\n//       machine = Number(parts[1]);\n//       break;\n//     }\n//   }\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// }\n\nconst ID = {\n  // private timestamp: any\n  // private machine: number\n  // private pid: number\n  // private increment: number\n\n  setup(...arguments_) {\n    const a0 = arguments_[0];\n\n    if (typeof a0 === 'object') {\n      this.timestamp = a0.timestamp;\n      this.machine = a0.machine;\n      this.pid = a0.pid;\n      this.increment = a0.increment;\n    } else if (typeof a0 === 'string' && a0.length === 24) {\n      this.timestamp = Number(`0x${a0.slice(0, 8)}`);\n      this.machine = Number(`0x${a0.slice(8, 14)}`);\n      this.pid = Number(`0x${a0.slice(14, 18)}`);\n      this.increment = Number(`0x${a0.slice(18, 24)}`);\n    } else if (arguments.length === 4 && a0 !== null) {\n      this.timestamp = a0;\n      this.machine = arguments_[1];\n      this.pid = arguments_[2];\n      this.increment = arguments_[3];\n    } else {\n      this.timestamp = Math.floor(Date.now() / 1000);\n      this.machine = machine;\n      this.pid = pid;\n      this.increment = increment++;\n      if (increment > 0xff_ff_ff) {\n        increment = 0;\n      }\n    }\n    return this;\n  },\n\n  getDate() {\n    return new Date(this.timestamp * 1000);\n  },\n\n  toArray() {\n    const stringOid = this.toString();\n    const array = [];\n    let index;\n    for (index = 0; index < 12; index++) {\n      array[index] = Number.parseInt(stringOid.slice(index * 2, index * 2 + 2), 16);\n    }\n    return array;\n  },\n\n  toString() {\n    const timestamp = this.timestamp.toString(16);\n    const mach = this.machine.toString(16);\n    const pd = this.pid.toString(16);\n    const incr = this.increment.toString(16);\n    return (\n      '00000000'.slice(0, Math.max(0, 8 - timestamp.length)) +\n      timestamp +\n      '000000'.slice(0, Math.max(0, 6 - mach.length)) +\n      mach +\n      '0000'.slice(0, Math.max(0, 4 - pd.length)) +\n      pd +\n      '000000'.slice(0, Math.max(0, 6 - incr.length)) +\n      incr\n    );\n  },\n};\n\nconst objectID = function (arguments_) {\n  return Object.create(ID).setup(arguments_);\n};\n\nexport { objectID };\n","import { Random, Entropy } from './entropy-string/index.js';\n\nlet _instance;\n\nconst _random = {\n  setup(total = 1e6, risk = 1e9) {\n    this.random = new Random();\n    this.bits = Entropy.bits(total, risk);\n    return this;\n  },\n  string() {\n    return this.random.string(this.bits);\n  },\n};\n\nexport function init(total, risk) {\n  _instance = Object.create(_random).setup(total, risk);\n}\n\n/**\n *\n * @returns {string} A random string\n */\nexport function string() {\n  if (!_instance) {\n    init();\n  }\n  return _instance.string();\n}\n","export class RBAC {\n  constructor(roles) {\n    // If not a function then should be object\n    if (typeof roles !== 'object') {\n      throw new TypeError('Expected input to be function or object');\n    }\n\n    const map = {};\n\n    for (const [role, value] of Object.entries(roles)) {\n      map[role] = { can: {} };\n\n      // Check can definition\n      if (!Array.isArray(value.can)) {\n        throw new TypeError(`Expected roles[${role}].can to be an array`);\n      }\n\n      if (value.inherits) {\n        if (!Array.isArray(value.inherits)) {\n          throw new TypeError(`Expected roles[${role}].inherits to be an array`);\n        }\n\n        map[role].inherits = [];\n        for (const child of value.inherits) {\n          if (typeof child !== 'string') {\n            throw new TypeError(`Expected roles[${role}].inherits element`);\n          }\n\n          if (!roles[child]) {\n            throw new TypeError(`Undefined inheritance role: ${child}`);\n          }\n          map[role].inherits.push(child);\n        }\n      }\n\n      // Iterate allowed operations\n      for (const operation of value.can) {\n        // If operation is string\n        if (typeof operation === 'string') {\n          // Add as an operation\n          map[role].can[operation] = 1;\n          continue;\n        }\n        // Check if operation has a .when function\n        if (typeof operation.when === 'function' && typeof operation.name === 'string') {\n          map[role].can[operation.name] = operation.when;\n          continue;\n        }\n\n        throw new TypeError(`Unexpected operation type ${operation}`);\n      }\n    }\n\n    // Add roles to class and mark as inited\n    this.roles = map;\n  }\n\n  /**\n   * @param {string } role\n   * @param {string} operation\n   * @param {any} parameters\n   */\n  canSync(role, operation, parameters) {\n    if (typeof role !== 'string') {\n      throw new TypeError('Expected first parameter to be string : role');\n    }\n\n    if (typeof operation !== 'string') {\n      throw new TypeError('Expected second parameter to be string : operation');\n    }\n\n    const $role = this.roles[role];\n\n    if (!$role) {\n      throw new Error('Undefined role');\n    }\n\n    // IF this operation is not defined at current level try higher\n    if (!$role.can[operation]) {\n      // If no parents reject\n      if (!$role.inherits || $role.inherits.length === 0) {\n        return false;\n      }\n\n      // Return if any parent resolves true or all reject\n      return $role.inherits.some(parent => {\n        return this.canSync(parent, operation, parameters);\n      });\n    }\n\n    // We have the operation resolve\n    if ($role.can[operation] === 1) {\n      return true;\n    }\n\n    // Operation is conditional, run async function\n    if (typeof $role.can[operation] === 'function') {\n      $role.can[operation](parameters, function (error, result) {\n        if (error) {\n          return false;\n        }\n        if (!result) {\n          return false;\n        }\n        return true;\n      });\n      return;\n    }\n    // No operation reject as false\n    return false;\n  }\n\n  can(role, operation, parameters) {\n    return new Promise((resolve, reject) => {\n      if (typeof role !== 'string') {\n        throw new TypeError('Expected first parameter to be string : role');\n      }\n\n      if (typeof operation !== 'string') {\n        throw new TypeError('Expected second parameter to be string : operation');\n      }\n\n      const $role = this.roles[role];\n\n      if (!$role) {\n        throw new Error('Undefined role');\n      }\n\n      // IF this operation is not defined at current level try higher\n      if (!$role.can[operation]) {\n        // If no parents reject\n        if (!$role.inherits || $role.inherits.length === 0) {\n          return reject(new Error('unauthorized'));\n        }\n\n        // Return if any parent resolves true or all reject\n        return Promise.all(\n          $role.inherits.map(parent => {\n            return this.can(parent, operation, parameters)\n              .then(() => true)\n              .catch(() => false);\n          }),\n        ).then(result => {\n          if (result.some(Boolean)) {\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      }\n\n      // We have the operation resolve\n      if ($role.can[operation] === 1) {\n        return resolve(true);\n      }\n\n      // Operation is conditional, run async function\n      if (typeof $role.can[operation] === 'function') {\n        $role.can[operation](parameters, function (error, result) {\n          if (error) {\n            return reject(error);\n          }\n          if (!result) {\n            return reject(new Error('unauthorized'));\n          }\n          resolve(true);\n        });\n        return;\n      }\n      // No operation reject as false\n      reject(false);\n    });\n  }\n}\n","let increment = 0;\nconst pid = Math.floor(Math.random() * 32_767);\nconst machine = Math.floor(Math.random() * 16_777_216);\n\n// if (typeof localStorage !== 'undefined') {\n//   let mongoMachineId = parseInt(localStorage.mongoMachineId);\n//   if (mongoMachineId >= 0 && mongoMachineId <= 16777215) {\n//     machine = Math.floor(localStorage.mongoMachineId);\n//   }\n//   // Just always stick the value in.\n//   localStorage.mongoMachineId = machine;\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// } else {\n//   let cookieList = document.cookie.split('; ');\n//   for (let i in cookieList) {\n//     let cookie = cookieList[i].split('=');\n//     if (cookie[0] === 'mongoMachineId' && Number(cookie[1]) >= 0 && Number(cookie[1]) <= 16777215) {\n//       machine = Number(cookie[1]);\n//       break;\n//     }\n//   }\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// }\n\nconst ObjectId = {\n  // private timestamp: any\n  // private machine: number\n  // private pid: number\n  // private increment: number\n\n  setup(...arguments_) {\n    const a0 = arguments_[0];\n\n    if (typeof a0 === 'object') {\n      this.timestamp = a0.timestamp;\n      this.machine = a0.machine;\n      this.pid = a0.pid;\n      this.increment = a0.increment;\n    } else if (typeof a0 === 'string' && a0.length === 24) {\n      this.timestamp = Number(`0x${a0.slice(0, 8)}`);\n      this.machine = Number(`0x${a0.slice(8, 14)}`);\n      this.pid = Number(`0x${a0.slice(14, 18)}`);\n      this.increment = Number(`0x${a0.slice(18, 24)}`);\n    } else if (arguments.length === 4 && a0 !== null) {\n      this.timestamp = a0;\n      this.machine = arguments_[1];\n      this.pid = arguments_[2];\n      this.increment = arguments_[3];\n    } else {\n      this.timestamp = Math.floor(Date.now() / 1000);\n      this.machine = machine;\n      this.pid = pid;\n      this.increment = increment++;\n      if (increment > 0xff_ff_ff) {\n        increment = 0;\n      }\n    }\n    return this;\n  },\n\n  getDate() {\n    return new Date(this.timestamp * 1000);\n  },\n\n  toArray() {\n    const stringOid = this.toString();\n    const array = [];\n    let index;\n    for (index = 0; index < 12; index++) {\n      array[index] = Number.parseInt(stringOid.slice(index * 2, index * 2 + 2), 16);\n    }\n    return array;\n  },\n\n  toString() {\n    const timestamp = this.timestamp.toString(16);\n    const mach = this.machine.toString(16);\n    const pd = this.pid.toString(16);\n    const incr = this.increment.toString(16);\n    return (\n      '00000000'.slice(0, Math.max(0, 8 - timestamp.length)) +\n      timestamp +\n      '000000'.slice(0, Math.max(0, 6 - mach.length)) +\n      mach +\n      '0000'.slice(0, Math.max(0, 4 - pd.length)) +\n      pd +\n      '000000'.slice(0, Math.max(0, 6 - incr.length)) +\n      incr\n    );\n  },\n};\n\nconst objectId = function (arguments_) {\n  return Object.create(ObjectId).setup(arguments_);\n};\n\nexport default objectId;\n"],"names":["_rng","Math","random","rng","getRandomSubarray","arr","size","shuffled","index","rand","forEach","value","floor","slice","getRandomSubarrayAlt","count","length","temp","setRng","newrng","_now","self","performance","now","Date","window","ElapsedTimer","start","startDate","startTime","elapsed","precision","Number","elapsedFull","toFixed","_gcd","a","b","abs","propertyMap","WeakMap","BITS_PER_BYTE","CharSet","constructor","chars","String","TypeError","includes","Error","bitsPerChar","log2","c","charAt","index_","privProps","ndxFn","_ndxFunction","charsPerChunk","lcm","set","getChars","get","getBitsPerChar","getNdxFn","getCharsPerChunk","bytesNeeded","entropyBits","ceil","chunk","bytes","lShift","rShift","slicesPerChunk","bNumber","offset","lOffset","rOffset","ndx","rShiftIt","charSet64","charSet32","charSet16","charSet8","charSet4","charSet2","_log2","_totalOf","numberStrings","log2Risk","N","bits","total","risk","argument","charSet","undefined","hideProps","smallID","string","mediumID","largeID","sessionID","token","stringWithBytes","_cryptoBytes","stringRandom","_randomBytes","_stringWithBytes","use","useChars","need","chunks","partials","ndxFunction","buffer","Uint8Array","crypto","getRandomValues","BYTES_USED_PER_RANDOM_CALL","randCount","dataView","DataView","ArrayBuffer","rNumber","setFloat64","n","fByteNumber","_endianByteNumber","bByteNumber","getUint8","buf32","Uint32Array","buf8","increment","pid","machine","document","cookie","toUTCString","location","hostname","localStorage","removeItem","ID","setup","arguments_","a0","timestamp","arguments","getDate","toArray","stringOid","toString","array","parseInt","mach","pd","incr","max","objectID","Object","create","_instance","_random","Random","Entropy","init","RBAC","roles","map","role","entries","can","Array","isArray","inherits","child","push","operation","when","name","canSync","parameters","$role","some","parent","error","result","Promise","resolve","reject","all","then","catch","Boolean","ObjectId","objectId"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,IAAI,CAACC,MAAhB,CAAA;;AAEA,SAASC,GAAT,GAAe;AACb,EAAA,OAAOH,IAAI,EAAX,CAAA;AACD;AAGD;AACA;;;AACA,SAASI,iBAAT,CAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;EACpC,MAAMC,QAAQ,GAAG,EAAjB,CAAA;EACA,IAAIC,KAAK,GAAG,CAAZ,CAAA;AACA,EAAA,IAAIC,IAAJ,CAAA;AACAJ,EAAAA,GAAG,CAACK,OAAJ,CAAYC,KAAK,IAAI;AACnBF,IAAAA,IAAI,GAAGR,IAAI,CAACW,KAAL,CAAW,CAACJ,KAAK,EAAA,GAAK,CAAX,IAAgBR,IAAI,EAA/B,CAAP,CAAA;IACAO,QAAQ,CAACC,KAAK,GAAG,CAAT,CAAR,GAAsBD,QAAQ,CAACE,IAAD,CAA9B,CAAA;AACAF,IAAAA,QAAQ,CAACE,IAAD,CAAR,GAAiBE,KAAjB,CAAA;AACD,GAJD,EAJoC;;EAWpC,OAAOL,IAAI,GAAGC,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAkBP,IAAlB,CAAH,GAA6BC,QAAxC,CAAA;AACD;AAGD;AACA;;;AACA,SAASO,oBAAT,CAA8BT,GAA9B,EAAmCC,IAAnC,EAAyC;AACvC,EAAA,MAAMC,QAAQ,GAAGF,GAAG,CAACQ,KAAJ,EAAjB,CAAA;AACA,EAAA,IAAIE,KAAK,GAAGV,GAAG,CAACW,MAAhB,CAAA;AACA,EAAA,IAAIP,IAAJ,CAAA;AACA,EAAA,IAAIQ,IAAJ,CAAA;;AACA,EAAA,OAAOF,KAAP,EAAc;AACZN,IAAAA,IAAI,GAAIT,IAAI,EAAA,GAAKe,KAAK,EAAf,GAAqB,CAA5B,CAAA;AACAE,IAAAA,IAAI,GAAGZ,GAAG,CAACU,KAAD,CAAV,CAAA;AACAV,IAAAA,GAAG,CAACU,KAAD,CAAH,GAAaV,GAAG,CAACI,IAAD,CAAhB,CAAA;AACAJ,IAAAA,GAAG,CAACI,IAAD,CAAH,GAAYQ,IAAZ,CAAA;AACD,GAVsC;;;EAavC,OAAOX,IAAI,GAAGC,QAAQ,CAACM,KAAT,CAAe,CAAf,EAAkBP,IAAlB,CAAH,GAA6BC,QAAxC,CAAA;AACD,CAAA;;AAED,SAASW,MAAT,CAAgBC,MAAhB,EAAwB;AACtBnB,EAAAA,IAAI,GAAGmB,MAAP,CAAA;AACD,CAAA;;AAED,cAAe;EACbf,iBADa;EAEbU,oBAFa;EAGbI,MAHa;AAIbf,EAAAA,GAAAA;AAJa,CAAf;;AC9CA,MAAMiB,IAAI,GAAI,UAAUC,IAAV,EAAgB;EAC5B,OAAOA,IAAI,CAACC,WAAL,IAAoBD,IAAI,CAACC,WAAL,CAAiBC,GAArC,GACH,YAAY;AACV,IAAA,OAAOF,IAAI,CAACC,WAAL,CAAiBC,GAAjB,EAAP,CAAA;AACD,GAHE,GAIH,YAAY;IACV,OAAOC,IAAI,CAACD,GAAL,EAAP,CAAA;GALN,CAAA;AAOD,CARY,CAQV,OAAOF,IAAP,KAAgB,WAAhB,GAA8BA,IAA9B,GAAqCI,MAR3B,CAAb,CAAA;;AAUO,MAAMC,YAAN,CAAmB;AACxB;AACF;AACA;AACEC,EAAAA,KAAK,GAAG;AACN,IAAA,IAAA,CAAKC,SAAL,GAAiB,IAAIJ,IAAJ,EAAjB,CAAA;IACA,IAAKK,CAAAA,SAAL,GAAiBT,IAAI,EAArB,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;;;AACEU,EAAAA,OAAO,GAAgB;IAAA,IAAfC,SAAe,uEAAH,CAAG,CAAA;IACrB,OAAOC,MAAM,CAAC,IAAKC,CAAAA,WAAL,GAAmBC,OAAnB,CAA2BH,SAA3B,CAAD,CAAb,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;;;AACEE,EAAAA,WAAW,GAAG;IACZ,OAAOb,IAAI,EAAK,GAAA,IAAA,CAAKS,SAArB,CAAA;AACD,GAAA;;AAxBuB;;ACV1B,MAAMM,IAAI,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;EACrB,OAAOA,CAAC,IAAI,CAAZ,EAAe;IACb,CAACD,CAAD,EAAIC,CAAJ,CAAS,GAAA,CAACA,CAAD,EAAID,CAAC,GAAGC,CAAR,CAAT,CAAA;AACD,GAAA;;AACD,EAAA,OAAOpC,IAAI,CAACqC,GAAL,CAASF,CAAT,CAAP,CAAA;AACD,CALD,CAAA;;AAOA,UAAA,CAAe,CAACA,CAAD,EAAIC,CAAJ,KAAU;EACvB,OAAQD,CAAC,GAAGD,IAAI,CAACC,CAAD,EAAIC,CAAJ,CAAT,GAAmBA,CAA1B,CAAA;AACD,CAFD;;ACLA,MAAME,aAAW,GAAG,IAAIC,OAAJ,EAApB,CAAA;AAEA,MAAMC,eAAa,GAAG,CAAtB,CAAA;AAEe,MAAMC,OAAN,CAAc;EAC3BC,WAAW,CAACC,KAAD,EAAQ;IACjB,IAAI,EAAE,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYC,MAAhD,CAAJ,EAA6D;AAC3D,MAAA,MAAM,IAAIC,SAAJ,CAAc,+BAAd,CAAN,CAAA;AACD,KAAA;;AACD,IAAA,MAAM9B,MAAM,GAAG4B,KAAK,CAAC5B,MAArB,CAAA;;AACA,IAAA,IAAI,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,CAAA,CAAsB+B,QAAtB,CAA+B/B,MAA/B,CAAL,EAA6C;AAC3C,MAAA,MAAM,IAAIgC,KAAJ,CAAU,mDAAV,CAAN,CAAA;AACD,KAAA;;AACD,IAAA,MAAMC,WAAW,GAAGhD,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACiD,IAAL,CAAUlC,MAAV,CAAX,CAApB,CARiB;;IAUjB,KAAK,IAAIR,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGQ,MAA5B,EAAoCR,KAAK,EAAzC,EAA6C;AAC3C,MAAA,MAAM2C,CAAC,GAAGP,KAAK,CAACQ,MAAN,CAAa5C,KAAb,CAAV,CAAA;;AACA,MAAA,KAAK,IAAI6C,MAAM,GAAG7C,KAAK,GAAG,CAA1B,EAA6B6C,MAAM,GAAGrC,MAAtC,EAA8CqC,MAAM,EAApD,EAAwD;QACtD,IAAIF,CAAC,KAAKP,KAAK,CAACQ,MAAN,CAAaC,MAAb,CAAV,EAAgC;AAC9B,UAAA,MAAM,IAAIL,KAAJ,CAAU,uBAAV,CAAN,CAAA;AACD,SAAA;AACF,OAAA;AACF,KAAA;;AACD,IAAA,MAAMM,SAAS,GAAG;MAChBV,KADgB;MAEhBK,WAFgB;MAGhBjC,MAHgB;AAIhBuC,MAAAA,KAAK,EAAEC,YAAY,CAACP,WAAD,CAJH;AAKhBQ,MAAAA,aAAa,EAAEC,GAAG,CAACT,WAAD,EAAcR,eAAd,CAAH,GAAkCQ,WAAAA;KALnD,CAAA;AAOAV,IAAAA,aAAW,CAACoB,GAAZ,CAAgB,IAAhB,EAAsBL,SAAtB,CAAA,CAAA;AACD,GAAA;;AAEDM,EAAAA,QAAQ,GAAG;AACT,IAAA,OAAOrB,aAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBjB,KAA7B,CAAA;AACD,GAAA;;AAEDkB,EAAAA,cAAc,GAAG;AACf,IAAA,OAAOvB,aAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBZ,WAA7B,CAAA;AACD,GAAA;;AAEDc,EAAAA,QAAQ,GAAG;AACT,IAAA,OAAOxB,aAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBN,KAA7B,CAAA;AACD,GAAA;;AAEDS,EAAAA,gBAAgB,GAAG;AACjB,IAAA,OAAOzB,aAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBJ,aAA7B,CAAA;AACD,GAAA;;AAEDzC,EAAAA,MAAM,GAAG;AACP,IAAA,OAAOuB,aAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsB7C,MAA7B,CAAA;AACD,GAAA;;EAEDiD,WAAW,CAACC,WAAD,EAAc;IACvB,MAAMnD,KAAK,GAAGd,IAAI,CAACkE,IAAL,CAAUD,WAAW,GAAG,IAAA,CAAKjB,WAAL,EAAxB,CAAd,CAAA;IACA,OAAOhD,IAAI,CAACkE,IAAL,CAAWpD,KAAK,GAAG,IAAA,CAAKkC,WAAL,EAAT,GAA+BR,eAAzC,CAAP,CAAA;AACD,GApD0B;;;AAuD3BG,EAAAA,KAAK,GAAG;IACN,OAAO,IAAA,CAAKgB,QAAL,EAAP,CAAA;AACD,GAAA;;AACDL,EAAAA,KAAK,GAAG;IACN,OAAO,IAAA,CAAKQ,QAAL,EAAP,CAAA;AACD,GAAA;;AACDd,EAAAA,WAAW,GAAG;IACZ,OAAO,IAAA,CAAKa,cAAL,EAAP,CAAA;AACD,GAAA;;AA/D0B,CAAA;;AAkE7B,MAAMN,YAAY,GAAGP,WAAW,IAAI;AAClC;AACA;EACA,IAAIS,GAAG,CAACT,WAAD,EAAcR,eAAd,CAAH,KAAoCA,eAAxC,EAAuD;AACrD,IAAA,OAAO,UAAU2B,KAAV,EAAiBvD,KAAjB,EAAwBwD,KAAxB,EAA+B;MACpC,MAAMC,MAAM,GAAGrB,WAAf,CAAA;AACA,MAAA,MAAMsB,MAAM,GAAG9B,eAAa,GAAGQ,WAA/B,CAAA;AACA,MAAA,OAAO,CAAEoB,KAAK,CAACD,KAAD,CAAL,IAAiBE,MAAM,GAAGzD,KAA3B,GAAqC,IAAtC,KAA+C0D,MAAtD,CAAA;KAHF,CAAA;AAKD,GATiC;AAYlC;;;EACA,MAAMC,cAAc,GAAGd,GAAG,CAACT,WAAD,EAAcR,eAAd,CAAH,GAAkCA,eAAzD,CAAA;AACA,EAAA,OAAO,UAAU2B,KAAV,EAAiBvD,KAAjB,EAAwBwD,KAAxB,EAA+B;AACpC,IAAA,MAAMI,OAAO,GAAGL,KAAK,GAAGI,cAAxB,CAAA;AAEA,IAAA,MAAME,MAAM,GAAI7D,KAAK,GAAGoC,WAAT,GAAwBR,eAAvC,CAAA;AACA,IAAA,MAAMkC,OAAO,GAAG1E,IAAI,CAACW,KAAL,CAAW8D,MAAX,CAAhB,CAAA;AACA,IAAA,MAAME,OAAO,GAAG3E,IAAI,CAACkE,IAAL,CAAUO,MAAV,CAAhB,CAAA;AAEA,IAAA,MAAMH,MAAM,GAAG9B,eAAa,GAAGQ,WAA/B,CAAA;AACA,IAAA,MAAMqB,MAAM,GAAIzD,KAAK,GAAGoC,WAAT,GAAwBR,eAAvC,CAAA;AAEA,IAAA,IAAIoC,GAAG,GAAG,CAAER,KAAK,CAACI,OAAO,GAAGE,OAAX,CAAL,IAA4BL,MAA7B,GAAuC,IAAxC,KAAiDC,MAA3D,CAAA;AAEA,IAAA,MAAMO,QAAQ,GAAG,CAAC,CAACF,OAAO,GAAG,CAAX,IAAgBnC,eAAhB,GAAgC,CAAC5B,KAAK,GAAG,CAAT,IAAcoC,WAA/C,IAA8DR,eAA/E,CAAA;;IACA,IAAI8B,MAAM,GAAGO,QAAb,EAAuB;MACrBD,GAAG,IAAIR,KAAK,CAACI,OAAO,GAAGG,OAAX,CAAL,IAA4BE,QAAnC,CAAA;AACD,KAAA;;AACD,IAAA,OAAOD,GAAP,CAAA;GAhBF,CAAA;AAkBD,CAhCD,CAAA;;AAkCO,MAAME,SAAS,GAAG,IAAIrC,OAAJ,CAAY,kEAAZ,CAAlB,CAAA;AACA,MAAMsC,SAAS,GAAG,IAAItC,OAAJ,CAAY,kCAAZ,CAAlB,CAAA;AACA,MAAMuC,SAAS,GAAG,IAAIvC,OAAJ,CAAY,kBAAZ,CAAlB,CAAA;AACA,MAAMwC,QAAQ,GAAG,IAAIxC,OAAJ,CAAY,UAAZ,CAAjB,CAAA;AACA,MAAMyC,QAAQ,GAAG,IAAIzC,OAAJ,CAAY,MAAZ,CAAjB,CAAA;AACA,MAAM0C,QAAQ,GAAG,IAAI1C,OAAJ,CAAY,IAAZ,CAAjB;;AC/GP,MAAM2C,KAAK,GAAGpF,IAAI,CAACiD,IAAnB,CAAA;;AAEA,MAAMoC,QAAQ,GAAG,CAACC,aAAD,EAAgBC,QAAhB,KAA6B;EAC5C,IAAID,aAAa,IAAI,CAArB,EAAwB;AACtB,IAAA,OAAO,CAAP,CAAA;AACD,GAAA;;EAED,MAAME,CAAC,GAAGF,aAAa,GAAG,IAAhB,GAAuBF,KAAK,CAACE,aAAD,CAAL,GAAuBF,KAAK,CAACE,aAAa,GAAG,CAAjB,CAAnD,GAAyE,CAAIF,GAAAA,KAAK,CAACE,aAAD,CAA5F,CAAA;AACA,EAAA,OAAOE,CAAC,GAAGD,QAAJ,GAAe,CAAtB,CAAA;AACD,CAPD,CAAA;;AASA,MAAME,IAAI,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;EAC5B,IAAID,KAAK,IAAI,CAAb,EAAgB;AACd,IAAA,OAAO,CAAP,CAAA;AACD,GAAA;;EACD,OAAOL,QAAQ,CAACK,KAAD,EAAQN,KAAK,CAACO,IAAD,CAAb,CAAf,CAAA;AACD,CALD,CAAA;;AAOA,cAAe;AACbF,EAAAA,IAAAA;AADa,CAAf;;AChBA,MAAMnD,WAAW,GAAG,IAAIC,OAAJ,EAApB,CAAA;AAEA,MAAMC,aAAa,GAAG,CAAtB,CAAA;AAEe,YAAM,CAAA;EACnBE,WAAW,CAACkD,QAAD,EAAW;AACpB,IAAA,IAAIC,OAAJ,CAAA;;IACA,IAAID,QAAQ,KAAKE,SAAjB,EAA4B;AAC1BD,MAAAA,OAAO,GAAGd,SAAV,CAAA;AACD,KAFD,MAEO,IAAIa,QAAQ,YAAYnD,OAAxB,EAAiC;AACtCoD,MAAAA,OAAO,GAAGD,QAAV,CAAA;KADK,MAEA,IAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,YAAYhD,MAAxD,EAAgE;AACrEiD,MAAAA,OAAO,GAAG,IAAIpD,OAAJ,CAAYmD,QAAZ,CAAV,CAAA;AACD,KAFM,MAEA;AACL,MAAA,MAAM,IAAI/C,SAAJ,CAAc,0DAAd,CAAN,CAAA;AACD,KAAA;;AACD,IAAA,MAAMkD,SAAS,GAAG;AAChBF,MAAAA,OAAAA;KADF,CAAA;AAGAvD,IAAAA,WAAW,CAACoB,GAAZ,CAAgB,IAAhB,EAAsBqC,SAAtB,CAAA,CAAA;AACD,GAAA;;AAEDC,EAAAA,OAAO,GAA0C;IAAA,IAAzCH,OAAyC,uEAA/BvD,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBiC,OAAS,CAAA;AAC/C,IAAA,OAAO,KAAKI,MAAL,CAAY,EAAZ,EAAgBJ,OAAhB,CAAP,CAAA;AACD,GAAA;;AAEDK,EAAAA,QAAQ,GAA0C;IAAA,IAAzCL,OAAyC,uEAA/BvD,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBiC,OAAS,CAAA;AAChD,IAAA,OAAO,KAAKI,MAAL,CAAY,EAAZ,EAAgBJ,OAAhB,CAAP,CAAA;AACD,GAAA;;AAEDM,EAAAA,OAAO,GAA0C;IAAA,IAAzCN,OAAyC,uEAA/BvD,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBiC,OAAS,CAAA;AAC/C,IAAA,OAAO,KAAKI,MAAL,CAAY,EAAZ,EAAgBJ,OAAhB,CAAP,CAAA;AACD,GAAA;;AAEDO,EAAAA,SAAS,GAA0C;IAAA,IAAzCP,OAAyC,uEAA/BvD,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBiC,OAAS,CAAA;AACjD,IAAA,OAAO,KAAKI,MAAL,CAAY,GAAZ,EAAiBJ,OAAjB,CAAP,CAAA;AACD,GAAA;;AAEDQ,EAAAA,KAAK,GAA0C;IAAA,IAAzCR,OAAyC,uEAA/BvD,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBiC,OAAS,CAAA;AAC7C,IAAA,OAAO,KAAKI,MAAL,CAAY,GAAZ,EAAiBJ,OAAjB,CAAP,CAAA;AACD,GAAA;;EAEDI,MAAM,CAAChC,WAAD,EAAuD;IAAA,IAAzC4B,OAAyC,uEAA/BvD,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBiC,OAAS,CAAA;AAC3D,IAAA,MAAM7B,WAAW,GAAG6B,OAAO,CAAC7B,WAAR,CAAoBC,WAApB,CAApB,CAAA;IACA,OAAO,IAAA,CAAKqC,eAAL,CAAqBrC,WAArB,EAAkCsC,YAAY,CAACvC,WAAD,CAA9C,EAA6D6B,OAA7D,CAAP,CAAA;AACD,GAAA;;EAEDW,YAAY,CAACvC,WAAD,EAAuD;IAAA,IAAzC4B,OAAyC,uEAA/BvD,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBiC,OAAS,CAAA;AACjE,IAAA,MAAM7B,WAAW,GAAG6B,OAAO,CAAC7B,WAAR,CAAoBC,WAApB,CAApB,CAAA;IACA,OAAO,IAAA,CAAKqC,eAAL,CAAqBrC,WAArB,EAAkCwC,YAAY,CAACzC,WAAD,CAA9C,EAA6D6B,OAA7D,CAAP,CAAA;AACD,GAAA;;AAEDS,EAAAA,eAAe,CAACrC,WAAD,EAAcG,KAAd,EAA8D;IAAA,IAAzCyB,OAAyC,uEAA/BvD,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBiC,OAAS,CAAA;AAC3E,IAAA,OAAOa,gBAAgB,CAACzC,WAAD,EAAcG,KAAd,EAAqByB,OAArB,CAAvB,CAAA;AACD,GAAA;;EAED7B,WAAW,CAACC,WAAD,EAAuD;IAAA,IAAzC4B,OAAyC,uEAA/BvD,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,EAAsBiC,OAAS,CAAA;AAChE,IAAA,OAAOA,OAAO,CAAC7B,WAAR,CAAoBC,WAApB,CAAP,CAAA;AACD,GAAA;;AAEDtB,EAAAA,KAAK,GAAG;IACN,OAAOL,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,CAAsBiC,CAAAA,OAAtB,CAA8BlD,KAA9B,EAAP,CAAA;AACD,GAAA;;EAEDgE,GAAG,CAACd,OAAD,EAAU;AACX,IAAA,IAAI,EAAEA,OAAO,YAAYpD,OAArB,CAAJ,EAAmC;AACjC,MAAA,MAAM,IAAII,SAAJ,CAAc,iBAAd,CAAN,CAAA;AACD,KAAA;;AACDP,IAAAA,WAAW,CAACsB,GAAZ,CAAgB,IAAhB,CAAsBiC,CAAAA,OAAtB,GAAgCA,OAAhC,CAAA;AACD,GAAA;;EAEDe,QAAQ,CAACjE,KAAD,EAAQ;IACd,IAAI,EAAE,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYC,MAAhD,CAAJ,EAA6D;AAC3D,MAAA,MAAM,IAAIC,SAAJ,CAAc,+BAAd,CAAN,CAAA;AACD,KAAA;;AACD,IAAA,IAAA,CAAK8D,GAAL,CAAS,IAAIlE,OAAJ,CAAYE,KAAZ,CAAT,CAAA,CAAA;AACD,GAAA;;AAxEkB,CAAA;;AA2ErB,MAAM+D,gBAAgB,GAAG,CAACzC,WAAD,EAAcG,KAAd,EAAqByB,OAArB,KAAiC;EACxD,IAAI5B,WAAW,IAAI,CAAnB,EAAsB;AACpB,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;AAED,EAAA,MAAMjB,WAAW,GAAG6C,OAAO,CAAChC,cAAR,EAApB,CAAA;EACA,MAAM/C,KAAK,GAAGd,IAAI,CAACkE,IAAL,CAAUD,WAAW,GAAGjB,WAAxB,CAAd,CAAA;;EACA,IAAIlC,KAAK,IAAI,CAAb,EAAgB;AACd,IAAA,OAAO,EAAP,CAAA;AACD,GAAA;;AAED,EAAA,MAAM+F,IAAI,GAAG7G,IAAI,CAACkE,IAAL,CAAUpD,KAAK,IAAIkC,WAAW,GAAGR,aAAlB,CAAf,CAAb,CAAA;;AACA,EAAA,IAAI4B,KAAK,CAACrD,MAAN,GAAe8F,IAAnB,EAAyB;IACvB,MAAM,IAAI9D,KAAJ,CAAU,2BAA8B8D,GAAAA,IAA9B,GAAqC,WAArC,GAAmDzC,KAAK,CAACrD,MAAnE,CAAN,CAAA;AACD,GAAA;;AAED,EAAA,MAAMyC,aAAa,GAAGqC,OAAO,CAAC9B,gBAAR,EAAtB,CAAA;EACA,MAAM+C,MAAM,GAAG9G,IAAI,CAACW,KAAL,CAAWG,KAAK,GAAG0C,aAAnB,CAAf,CAAA;AACA,EAAA,MAAMuD,QAAQ,GAAGjG,KAAK,GAAG0C,aAAzB,CAAA;AAEA,EAAA,MAAMwD,WAAW,GAAGnB,OAAO,CAAC/B,QAAR,EAApB,CAAA;AACA,EAAA,MAAMnB,KAAK,GAAGkD,OAAO,CAAClC,QAAR,EAAd,CAAA;EAEA,IAAIsC,MAAM,GAAG,EAAb,CAAA;;EACA,KAAK,IAAI9B,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG2C,MAA5B,EAAoC3C,KAAK,EAAzC,EAA6C;IAC3C,KAAK,IAAIvD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG4C,aAA5B,EAA2C5C,KAAK,EAAhD,EAAoD;MAClD,MAAMgE,GAAG,GAAGoC,WAAW,CAAC7C,KAAD,EAAQvD,KAAR,EAAewD,KAAf,CAAvB,CAAA;AACA6B,MAAAA,MAAM,IAAItD,KAAK,CAACiC,GAAD,CAAf,CAAA;AACD,KAAA;AACF,GAAA;;EACD,KAAK,IAAIhE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGmG,QAA5B,EAAsCnG,KAAK,EAA3C,EAA+C;IAC7C,MAAMgE,GAAG,GAAGoC,WAAW,CAACF,MAAD,EAASlG,KAAT,EAAgBwD,KAAhB,CAAvB,CAAA;AACA6B,IAAAA,MAAM,IAAItD,KAAK,CAACiC,GAAD,CAAf,CAAA;AACD,GAAA;;AACD,EAAA,OAAOqB,MAAP,CAAA;AACD,CAnCD,CAAA;;AAqCA,MAAMM,YAAY,GAAGzF,KAAK,IAAI;AAC5B,EAAA,MAAMmG,MAAM,GAAG,IAAIC,UAAJ,CAAepG,KAAf,CAAf,CAAA;AACAU,EAAAA,MAAM,CAAC2F,MAAP,CAAcC,eAAd,CAA8BH,MAA9B,CAAA,CAAA;AACA,EAAA,OAAOA,MAAP,CAAA;AACD,CAJD,CAAA;;AAMA,MAAMR,YAAY,GAAG3F,KAAK,IAAI;EAC5B,MAAMuG,0BAA0B,GAAG,CAAnC,CAAA;EACA,MAAMC,SAAS,GAAGtH,IAAI,CAACkE,IAAL,CAAUpD,KAAK,GAAGuG,0BAAlB,CAAlB,CAAA;AAEA,EAAA,MAAMJ,MAAM,GAAG,IAAIC,UAAJ,CAAepG,KAAf,CAAf,CAAA;EACA,MAAMyG,QAAQ,GAAG,IAAIC,QAAJ,CAAa,IAAIC,WAAJ,CAAgBjF,aAAhB,CAAb,CAAjB,CAAA;;EACA,KAAK,IAAIkF,OAAO,GAAG,CAAnB,EAAsBA,OAAO,GAAGJ,SAAhC,EAA2CI,OAAO,EAAlD,EAAsD;IACpDH,QAAQ,CAACI,UAAT,CAAoB,CAApB,EAAuB3H,IAAI,CAACC,MAAL,EAAvB,CAAA,CAAA;;IACA,KAAK,IAAI2H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,0BAApB,EAAgDO,CAAC,EAAjD,EAAqD;AACnD,MAAA,MAAMC,WAAW,GAAGC,iBAAiB,CAACF,CAAD,CAArC,CAAA;AACA,MAAA,MAAMG,WAAW,GAAGL,OAAO,GAAGL,0BAAV,GAAuCO,CAA3D,CAAA;;MACA,IAAIG,WAAW,GAAGjH,KAAlB,EAAyB;QACvBmG,MAAM,CAACc,WAAD,CAAN,GAAsBR,QAAQ,CAACS,QAAT,CAAkBH,WAAlB,CAAtB,CAAA;AACD,OAAA;AACF,KAAA;AACF,GAAA;;AACD,EAAA,OAAOZ,MAAP,CAAA;AACD,CAjBD,CAAA;;AAmBA,MAAMa,iBAAiB,GAAG,CAAC,MAAM;AAC/B,EAAA,MAAMG,KAAK,GAAG,IAAIC,WAAJ,CAAgB,CAAhB,CAAd,CAAA;EACA,MAAMC,IAAI,GAAG,IAAIjB,UAAJ,CAAee,KAAK,CAAChB,MAArB,CAAb,CAAA;AACAgB,EAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX,CAAA;AACA,EAAA,OAAOE,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,GAAmB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAnB,GAAwC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAA/C,CAAA;AACD,CALyB,GAA1B;;;;;;;;;;;;;;;AC/IA,IAAIC,WAAS,GAAG,CAAhB,CAAA;AACA,MAAMC,KAAG,GAAGrI,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACC,MAAL,EAAgB,GAAA,MAA3B,CAAZ,CAAA;AACA,MAAMqI,SAAO,GAAGtI,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACC,MAAL,EAAA,GAAgB,UAA3B,CAAhB;;AAGAsI,QAAQ,CAACC,MAAT,GAAmB,CAAA,wBAAA,EAA0B,IAAIjH,IAAJ,EAAWkH,CAAAA,WAAX,EAAyB,CAAA,eAAA,EAAiBC,QAAQ,CAACC,QAAS,CAAzG,CAAA,CAAA;;AAEA,IAAI,OAAOC,YAAP,KAAwB,WAA5B,EAAyC;EACvCA,YAAY,CAACC,UAAb,CAAwB,gBAAxB,CAAA,CAAA;AACD;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,EAAE,GAAG;AACT;AACA;AACA;AACA;AAEAC,EAAAA,KAAK,GAAgB;AAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAZC,UAAY,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAAZA,UAAY,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AAAA,KAAA;;AACnB,IAAA,MAAMC,EAAE,GAAGD,UAAU,CAAC,CAAD,CAArB,CAAA;;AAEA,IAAA,IAAI,OAAOC,EAAP,KAAc,QAAlB,EAA4B;AAC1B,MAAA,IAAA,CAAKC,SAAL,GAAiBD,EAAE,CAACC,SAApB,CAAA;AACA,MAAA,IAAA,CAAKZ,OAAL,GAAeW,EAAE,CAACX,OAAlB,CAAA;AACA,MAAA,IAAA,CAAKD,GAAL,GAAWY,EAAE,CAACZ,GAAd,CAAA;AACA,MAAA,IAAA,CAAKD,SAAL,GAAiBa,EAAE,CAACb,SAApB,CAAA;AACD,KALD,MAKO,IAAI,OAAOa,EAAP,KAAc,QAAd,IAA0BA,EAAE,CAAClI,MAAH,KAAc,EAA5C,EAAgD;AACrD,MAAA,IAAA,CAAKmI,SAAL,GAAiBnH,MAAM,CAAE,KAAIkH,EAAE,CAACrI,KAAH,CAAS,CAAT,EAAY,CAAZ,CAAe,EAArB,CAAvB,CAAA;AACA,MAAA,IAAA,CAAK0H,OAAL,GAAevG,MAAM,CAAE,KAAIkH,EAAE,CAACrI,KAAH,CAAS,CAAT,EAAY,EAAZ,CAAgB,EAAtB,CAArB,CAAA;AACA,MAAA,IAAA,CAAKyH,GAAL,GAAWtG,MAAM,CAAE,KAAIkH,EAAE,CAACrI,KAAH,CAAS,EAAT,EAAa,EAAb,CAAiB,EAAvB,CAAjB,CAAA;AACA,MAAA,IAAA,CAAKwH,SAAL,GAAiBrG,MAAM,CAAE,KAAIkH,EAAE,CAACrI,KAAH,CAAS,EAAT,EAAa,EAAb,CAAiB,EAAvB,CAAvB,CAAA;KAJK,MAKA,IAAIuI,SAAS,CAACpI,MAAV,KAAqB,CAArB,IAA0BkI,EAAE,KAAK,IAArC,EAA2C;MAChD,IAAKC,CAAAA,SAAL,GAAiBD,EAAjB,CAAA;AACA,MAAA,IAAA,CAAKX,OAAL,GAAeU,UAAU,CAAC,CAAD,CAAzB,CAAA;AACA,MAAA,IAAA,CAAKX,GAAL,GAAWW,UAAU,CAAC,CAAD,CAArB,CAAA;AACA,MAAA,IAAA,CAAKZ,SAAL,GAAiBY,UAAU,CAAC,CAAD,CAA3B,CAAA;AACD,KALM,MAKA;MACL,IAAKE,CAAAA,SAAL,GAAiBlJ,IAAI,CAACW,KAAL,CAAWY,IAAI,CAACD,GAAL,EAAa,GAAA,IAAxB,CAAjB,CAAA;MACA,IAAKgH,CAAAA,OAAL,GAAeA,SAAf,CAAA;MACA,IAAKD,CAAAA,GAAL,GAAWA,KAAX,CAAA;MACA,IAAKD,CAAAA,SAAL,GAAiBA,WAAS,EAA1B,CAAA;;MACA,IAAIA,WAAS,GAAG,UAAhB,EAA4B;AAC1BA,QAAAA,WAAS,GAAG,CAAZ,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;GAjCO;;AAoCTgB,EAAAA,OAAO,GAAG;AACR,IAAA,OAAO,IAAI7H,IAAJ,CAAS,KAAK2H,SAAL,GAAiB,IAA1B,CAAP,CAAA;GArCO;;AAwCTG,EAAAA,OAAO,GAAG;AACR,IAAA,MAAMC,SAAS,GAAG,IAAKC,CAAAA,QAAL,EAAlB,CAAA;IACA,MAAMC,KAAK,GAAG,EAAd,CAAA;AACA,IAAA,IAAIjJ,KAAJ,CAAA;;IACA,KAAKA,KAAK,GAAG,CAAb,EAAgBA,KAAK,GAAG,EAAxB,EAA4BA,KAAK,EAAjC,EAAqC;MACnCiJ,KAAK,CAACjJ,KAAD,CAAL,GAAewB,MAAM,CAAC0H,QAAP,CAAgBH,SAAS,CAAC1I,KAAV,CAAgBL,KAAK,GAAG,CAAxB,EAA2BA,KAAK,GAAG,CAAR,GAAY,CAAvC,CAAhB,EAA2D,EAA3D,CAAf,CAAA;AACD,KAAA;;AACD,IAAA,OAAOiJ,KAAP,CAAA;GA/CO;;AAkDTD,EAAAA,QAAQ,GAAG;IACT,MAAML,SAAS,GAAG,IAAKA,CAAAA,SAAL,CAAeK,QAAf,CAAwB,EAAxB,CAAlB,CAAA;IACA,MAAMG,IAAI,GAAG,IAAKpB,CAAAA,OAAL,CAAaiB,QAAb,CAAsB,EAAtB,CAAb,CAAA;IACA,MAAMI,EAAE,GAAG,IAAKtB,CAAAA,GAAL,CAASkB,QAAT,CAAkB,EAAlB,CAAX,CAAA;IACA,MAAMK,IAAI,GAAG,IAAKxB,CAAAA,SAAL,CAAemB,QAAf,CAAwB,EAAxB,CAAb,CAAA;AACA,IAAA,OACE,WAAW3I,KAAX,CAAiB,CAAjB,EAAoBZ,IAAI,CAAC6J,GAAL,CAAS,CAAT,EAAY,CAAIX,GAAAA,SAAS,CAACnI,MAA1B,CAApB,CACAmI,GAAAA,SADA,GAEA,QAAA,CAAStI,KAAT,CAAe,CAAf,EAAkBZ,IAAI,CAAC6J,GAAL,CAAS,CAAT,EAAY,IAAIH,IAAI,CAAC3I,MAArB,CAAlB,CAFA,GAGA2I,IAHA,GAIA,MAAA,CAAO9I,KAAP,CAAa,CAAb,EAAgBZ,IAAI,CAAC6J,GAAL,CAAS,CAAT,EAAY,IAAIF,EAAE,CAAC5I,MAAnB,CAAhB,CAJA,GAKA4I,EALA,GAMA,QAAA,CAAS/I,KAAT,CAAe,CAAf,EAAkBZ,IAAI,CAAC6J,GAAL,CAAS,CAAT,EAAY,IAAID,IAAI,CAAC7I,MAArB,CAAlB,CANA,GAOA6I,IARF,CAAA;AAUD,GAAA;;AAjEQ,CAAX,CAAA;;AAoEA,MAAME,QAAQ,GAAG,UAAUd,UAAV,EAAsB;EACrC,OAAOe,MAAM,CAACC,MAAP,CAAclB,EAAd,CAAkBC,CAAAA,KAAlB,CAAwBC,UAAxB,CAAP,CAAA;AACD;;ACnGD,IAAIiB,SAAJ,CAAA;;AAEA,MAAMC,OAAO,GAAG;AACdnB,EAAAA,KAAK,GAA0B;IAAA,IAAzBrD,KAAyB,uEAAjB,GAAiB,CAAA;IAAA,IAAZC,IAAY,uEAAL,GAAK,CAAA;AAC7B,IAAA,IAAA,CAAK1F,MAAL,GAAc,IAAIkK,MAAJ,EAAd,CAAA;IACA,IAAK1E,CAAAA,IAAL,GAAY2E,OAAO,CAAC3E,IAAR,CAAaC,KAAb,EAAoBC,IAApB,CAAZ,CAAA;AACA,IAAA,OAAO,IAAP,CAAA;GAJY;;AAMdM,EAAAA,MAAM,GAAG;AACP,IAAA,OAAO,KAAKhG,MAAL,CAAYgG,MAAZ,CAAmB,IAAA,CAAKR,IAAxB,CAAP,CAAA;AACD,GAAA;;AARa,CAAhB,CAAA;AAWO,SAAS4E,IAAT,CAAc3E,KAAd,EAAqBC,IAArB,EAA2B;AAChCsE,EAAAA,SAAS,GAAGF,MAAM,CAACC,MAAP,CAAcE,OAAd,CAAuBnB,CAAAA,KAAvB,CAA6BrD,KAA7B,EAAoCC,IAApC,CAAZ,CAAA;AACD,CAAA;AAED;AACA;AACA;AACA;;AACO,SAASM,MAAT,GAAkB;EACvB,IAAI,CAACgE,SAAL,EAAgB;IACdI,IAAI,EAAA,CAAA;AACL,GAAA;;EACD,OAAOJ,SAAS,CAAChE,MAAV,EAAP,CAAA;AACD;;;;;;;;AC5BM,MAAMqE,IAAN,CAAW;EAChB5H,WAAW,CAAC6H,KAAD,EAAQ;AACjB;AACA,IAAA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,MAAA,MAAM,IAAI1H,SAAJ,CAAc,yCAAd,CAAN,CAAA;AACD,KAAA;;IAED,MAAM2H,GAAG,GAAG,EAAZ,CAAA;;AAEA,IAAA,KAAK,MAAM,CAACC,IAAD,EAAO/J,KAAP,CAAX,IAA4BqJ,MAAM,CAACW,OAAP,CAAeH,KAAf,CAA5B,EAAmD;MACjDC,GAAG,CAACC,IAAD,CAAH,GAAY;AAAEE,QAAAA,GAAG,EAAE,EAAA;AAAP,OAAZ,CADiD;;MAIjD,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcnK,KAAK,CAACiK,GAApB,CAAL,EAA+B;AAC7B,QAAA,MAAM,IAAI9H,SAAJ,CAAe,CAAiB4H,eAAAA,EAAAA,IAAK,sBAArC,CAAN,CAAA;AACD,OAAA;;MAED,IAAI/J,KAAK,CAACoK,QAAV,EAAoB;QAClB,IAAI,CAACF,KAAK,CAACC,OAAN,CAAcnK,KAAK,CAACoK,QAApB,CAAL,EAAoC;AAClC,UAAA,MAAM,IAAIjI,SAAJ,CAAe,CAAiB4H,eAAAA,EAAAA,IAAK,2BAArC,CAAN,CAAA;AACD,SAAA;;AAEDD,QAAAA,GAAG,CAACC,IAAD,CAAH,CAAUK,QAAV,GAAqB,EAArB,CAAA;;AACA,QAAA,KAAK,MAAMC,KAAX,IAAoBrK,KAAK,CAACoK,QAA1B,EAAoC;AAClC,UAAA,IAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC7B,YAAA,MAAM,IAAIlI,SAAJ,CAAe,CAAiB4H,eAAAA,EAAAA,IAAK,oBAArC,CAAN,CAAA;AACD,WAAA;;AAED,UAAA,IAAI,CAACF,KAAK,CAACQ,KAAD,CAAV,EAAmB;AACjB,YAAA,MAAM,IAAIlI,SAAJ,CAAe,CAA8BkI,4BAAAA,EAAAA,KAAM,EAAnD,CAAN,CAAA;AACD,WAAA;;UACDP,GAAG,CAACC,IAAD,CAAH,CAAUK,QAAV,CAAmBE,IAAnB,CAAwBD,KAAxB,CAAA,CAAA;AACD,SAAA;AACF,OAxBgD;;;AA2BjD,MAAA,KAAK,MAAME,SAAX,IAAwBvK,KAAK,CAACiK,GAA9B,EAAmC;AACjC;AACA,QAAA,IAAI,OAAOM,SAAP,KAAqB,QAAzB,EAAmC;AACjC;UACAT,GAAG,CAACC,IAAD,CAAH,CAAUE,GAAV,CAAcM,SAAd,IAA2B,CAA3B,CAAA;AACA,UAAA,SAAA;AACD,SANgC;;;AAQjC,QAAA,IAAI,OAAOA,SAAS,CAACC,IAAjB,KAA0B,UAA1B,IAAwC,OAAOD,SAAS,CAACE,IAAjB,KAA0B,QAAtE,EAAgF;AAC9EX,UAAAA,GAAG,CAACC,IAAD,CAAH,CAAUE,GAAV,CAAcM,SAAS,CAACE,IAAxB,CAAA,GAAgCF,SAAS,CAACC,IAA1C,CAAA;AACA,UAAA,SAAA;AACD,SAAA;;AAED,QAAA,MAAM,IAAIrI,SAAJ,CAAe,CAA4BoI,0BAAAA,EAAAA,SAAU,EAArD,CAAN,CAAA;AACD,OAAA;AACF,KAlDgB;;;IAqDjB,IAAKV,CAAAA,KAAL,GAAaC,GAAb,CAAA;AACD,GAAA;AAED;AACF;AACA;AACA;AACA;;;AACEY,EAAAA,OAAO,CAACX,IAAD,EAAOQ,SAAP,EAAkBI,UAAlB,EAA8B;AACnC,IAAA,IAAI,OAAOZ,IAAP,KAAgB,QAApB,EAA8B;AAC5B,MAAA,MAAM,IAAI5H,SAAJ,CAAc,8CAAd,CAAN,CAAA;AACD,KAAA;;AAED,IAAA,IAAI,OAAOoI,SAAP,KAAqB,QAAzB,EAAmC;AACjC,MAAA,MAAM,IAAIpI,SAAJ,CAAc,oDAAd,CAAN,CAAA;AACD,KAAA;;AAED,IAAA,MAAMyI,KAAK,GAAG,IAAA,CAAKf,KAAL,CAAWE,IAAX,CAAd,CAAA;;IAEA,IAAI,CAACa,KAAL,EAAY;AACV,MAAA,MAAM,IAAIvI,KAAJ,CAAU,gBAAV,CAAN,CAAA;AACD,KAbkC;;;AAgBnC,IAAA,IAAI,CAACuI,KAAK,CAACX,GAAN,CAAUM,SAAV,CAAL,EAA2B;AACzB;AACA,MAAA,IAAI,CAACK,KAAK,CAACR,QAAP,IAAmBQ,KAAK,CAACR,QAAN,CAAe/J,MAAf,KAA0B,CAAjD,EAAoD;AAClD,QAAA,OAAO,KAAP,CAAA;AACD,OAJwB;;;AAOzB,MAAA,OAAOuK,KAAK,CAACR,QAAN,CAAeS,IAAf,CAAoBC,MAAM,IAAI;QACnC,OAAO,IAAA,CAAKJ,OAAL,CAAaI,MAAb,EAAqBP,SAArB,EAAgCI,UAAhC,CAAP,CAAA;AACD,OAFM,CAAP,CAAA;AAGD,KA1BkC;;;AA6BnC,IAAA,IAAIC,KAAK,CAACX,GAAN,CAAUM,SAAV,CAAA,KAAyB,CAA7B,EAAgC;AAC9B,MAAA,OAAO,IAAP,CAAA;AACD,KA/BkC;;;IAkCnC,IAAI,OAAOK,KAAK,CAACX,GAAN,CAAUM,SAAV,CAAP,KAAgC,UAApC,EAAgD;MAC9CK,KAAK,CAACX,GAAN,CAAUM,SAAV,CAAA,CAAqBI,UAArB,EAAiC,UAAUI,KAAV,EAAiBC,MAAjB,EAAyB;AACxD,QAAA,IAAID,KAAJ,EAAW;AACT,UAAA,OAAO,KAAP,CAAA;AACD,SAAA;;QACD,IAAI,CAACC,MAAL,EAAa;AACX,UAAA,OAAO,KAAP,CAAA;AACD,SAAA;;AACD,QAAA,OAAO,IAAP,CAAA;OAPF,CAAA,CAAA;AASA,MAAA,OAAA;AACD,KA7CkC;;;AA+CnC,IAAA,OAAO,KAAP,CAAA;AACD,GAAA;;AAEDf,EAAAA,GAAG,CAACF,IAAD,EAAOQ,SAAP,EAAkBI,UAAlB,EAA8B;AAC/B,IAAA,OAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,MAAA,IAAI,OAAOpB,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAA,MAAM,IAAI5H,SAAJ,CAAc,8CAAd,CAAN,CAAA;AACD,OAAA;;AAED,MAAA,IAAI,OAAOoI,SAAP,KAAqB,QAAzB,EAAmC;AACjC,QAAA,MAAM,IAAIpI,SAAJ,CAAc,oDAAd,CAAN,CAAA;AACD,OAAA;;AAED,MAAA,MAAMyI,KAAK,GAAG,IAAA,CAAKf,KAAL,CAAWE,IAAX,CAAd,CAAA;;MAEA,IAAI,CAACa,KAAL,EAAY;AACV,QAAA,MAAM,IAAIvI,KAAJ,CAAU,gBAAV,CAAN,CAAA;AACD,OAbqC;;;AAgBtC,MAAA,IAAI,CAACuI,KAAK,CAACX,GAAN,CAAUM,SAAV,CAAL,EAA2B;AACzB;AACA,QAAA,IAAI,CAACK,KAAK,CAACR,QAAP,IAAmBQ,KAAK,CAACR,QAAN,CAAe/J,MAAf,KAA0B,CAAjD,EAAoD;AAClD,UAAA,OAAO8K,MAAM,CAAC,IAAI9I,KAAJ,CAAU,cAAV,CAAD,CAAb,CAAA;AACD,SAJwB;;;QAOzB,OAAO4I,OAAO,CAACG,GAAR,CACLR,KAAK,CAACR,QAAN,CAAeN,GAAf,CAAmBgB,MAAM,IAAI;AAC3B,UAAA,OAAO,KAAKb,GAAL,CAASa,MAAT,EAAiBP,SAAjB,EAA4BI,UAA5B,CAAA,CACJU,IADI,CACC,MAAM,IADP,CAAA,CAEJC,KAFI,CAEE,MAAM,KAFR,CAAP,CAAA;AAGD,SAJD,CADK,CAAA,CAMLD,IANK,CAMAL,MAAM,IAAI;AACf,UAAA,IAAIA,MAAM,CAACH,IAAP,CAAYU,OAAZ,CAAJ,EAA0B;YACxBL,OAAO,EAAA,CAAA;AACR,WAFD,MAEO;YACLC,MAAM,EAAA,CAAA;AACP,WAAA;AACF,SAZM,CAAP,CAAA;AAaD,OApCqC;;;AAuCtC,MAAA,IAAIP,KAAK,CAACX,GAAN,CAAUM,SAAV,CAAA,KAAyB,CAA7B,EAAgC;QAC9B,OAAOW,OAAO,CAAC,IAAD,CAAd,CAAA;AACD,OAzCqC;;;MA4CtC,IAAI,OAAON,KAAK,CAACX,GAAN,CAAUM,SAAV,CAAP,KAAgC,UAApC,EAAgD;QAC9CK,KAAK,CAACX,GAAN,CAAUM,SAAV,CAAA,CAAqBI,UAArB,EAAiC,UAAUI,KAAV,EAAiBC,MAAjB,EAAyB;AACxD,UAAA,IAAID,KAAJ,EAAW;YACT,OAAOI,MAAM,CAACJ,KAAD,CAAb,CAAA;AACD,WAAA;;UACD,IAAI,CAACC,MAAL,EAAa;AACX,YAAA,OAAOG,MAAM,CAAC,IAAI9I,KAAJ,CAAU,cAAV,CAAD,CAAb,CAAA;AACD,WAAA;;UACD6I,OAAO,CAAC,IAAD,CAAP,CAAA;SAPF,CAAA,CAAA;AASA,QAAA,OAAA;AACD,OAvDqC;;;MAyDtCC,MAAM,CAAC,KAAD,CAAN,CAAA;AACD,KA1DM,CAAP,CAAA;AA2DD,GAAA;;AA5Ke;;ACAlB,IAAIzD,SAAS,GAAG,CAAhB,CAAA;AACA,MAAMC,GAAG,GAAGrI,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACC,MAAL,EAAgB,GAAA,MAA3B,CAAZ,CAAA;AACA,MAAMqI,OAAO,GAAGtI,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACC,MAAL,EAAA,GAAgB,UAA3B,CAAhB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMiM,QAAQ,GAAG;AACf;AACA;AACA;AACA;AAEAnD,EAAAA,KAAK,GAAgB;AAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAZC,UAAY,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;MAAZA,UAAY,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AAAA,KAAA;;AACnB,IAAA,MAAMC,EAAE,GAAGD,UAAU,CAAC,CAAD,CAArB,CAAA;;AAEA,IAAA,IAAI,OAAOC,EAAP,KAAc,QAAlB,EAA4B;AAC1B,MAAA,IAAA,CAAKC,SAAL,GAAiBD,EAAE,CAACC,SAApB,CAAA;AACA,MAAA,IAAA,CAAKZ,OAAL,GAAeW,EAAE,CAACX,OAAlB,CAAA;AACA,MAAA,IAAA,CAAKD,GAAL,GAAWY,EAAE,CAACZ,GAAd,CAAA;AACA,MAAA,IAAA,CAAKD,SAAL,GAAiBa,EAAE,CAACb,SAApB,CAAA;AACD,KALD,MAKO,IAAI,OAAOa,EAAP,KAAc,QAAd,IAA0BA,EAAE,CAAClI,MAAH,KAAc,EAA5C,EAAgD;AACrD,MAAA,IAAA,CAAKmI,SAAL,GAAiBnH,MAAM,CAAE,KAAIkH,EAAE,CAACrI,KAAH,CAAS,CAAT,EAAY,CAAZ,CAAe,EAArB,CAAvB,CAAA;AACA,MAAA,IAAA,CAAK0H,OAAL,GAAevG,MAAM,CAAE,KAAIkH,EAAE,CAACrI,KAAH,CAAS,CAAT,EAAY,EAAZ,CAAgB,EAAtB,CAArB,CAAA;AACA,MAAA,IAAA,CAAKyH,GAAL,GAAWtG,MAAM,CAAE,KAAIkH,EAAE,CAACrI,KAAH,CAAS,EAAT,EAAa,EAAb,CAAiB,EAAvB,CAAjB,CAAA;AACA,MAAA,IAAA,CAAKwH,SAAL,GAAiBrG,MAAM,CAAE,KAAIkH,EAAE,CAACrI,KAAH,CAAS,EAAT,EAAa,EAAb,CAAiB,EAAvB,CAAvB,CAAA;KAJK,MAKA,IAAIuI,SAAS,CAACpI,MAAV,KAAqB,CAArB,IAA0BkI,EAAE,KAAK,IAArC,EAA2C;MAChD,IAAKC,CAAAA,SAAL,GAAiBD,EAAjB,CAAA;AACA,MAAA,IAAA,CAAKX,OAAL,GAAeU,UAAU,CAAC,CAAD,CAAzB,CAAA;AACA,MAAA,IAAA,CAAKX,GAAL,GAAWW,UAAU,CAAC,CAAD,CAArB,CAAA;AACA,MAAA,IAAA,CAAKZ,SAAL,GAAiBY,UAAU,CAAC,CAAD,CAA3B,CAAA;AACD,KALM,MAKA;MACL,IAAKE,CAAAA,SAAL,GAAiBlJ,IAAI,CAACW,KAAL,CAAWY,IAAI,CAACD,GAAL,EAAa,GAAA,IAAxB,CAAjB,CAAA;MACA,IAAKgH,CAAAA,OAAL,GAAeA,OAAf,CAAA;MACA,IAAKD,CAAAA,GAAL,GAAWA,GAAX,CAAA;MACA,IAAKD,CAAAA,SAAL,GAAiBA,SAAS,EAA1B,CAAA;;MACA,IAAIA,SAAS,GAAG,UAAhB,EAA4B;AAC1BA,QAAAA,SAAS,GAAG,CAAZ,CAAA;AACD,OAAA;AACF,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;GAjCa;;AAoCfgB,EAAAA,OAAO,GAAG;AACR,IAAA,OAAO,IAAI7H,IAAJ,CAAS,KAAK2H,SAAL,GAAiB,IAA1B,CAAP,CAAA;GArCa;;AAwCfG,EAAAA,OAAO,GAAG;AACR,IAAA,MAAMC,SAAS,GAAG,IAAKC,CAAAA,QAAL,EAAlB,CAAA;IACA,MAAMC,KAAK,GAAG,EAAd,CAAA;AACA,IAAA,IAAIjJ,KAAJ,CAAA;;IACA,KAAKA,KAAK,GAAG,CAAb,EAAgBA,KAAK,GAAG,EAAxB,EAA4BA,KAAK,EAAjC,EAAqC;MACnCiJ,KAAK,CAACjJ,KAAD,CAAL,GAAewB,MAAM,CAAC0H,QAAP,CAAgBH,SAAS,CAAC1I,KAAV,CAAgBL,KAAK,GAAG,CAAxB,EAA2BA,KAAK,GAAG,CAAR,GAAY,CAAvC,CAAhB,EAA2D,EAA3D,CAAf,CAAA;AACD,KAAA;;AACD,IAAA,OAAOiJ,KAAP,CAAA;GA/Ca;;AAkDfD,EAAAA,QAAQ,GAAG;IACT,MAAML,SAAS,GAAG,IAAKA,CAAAA,SAAL,CAAeK,QAAf,CAAwB,EAAxB,CAAlB,CAAA;IACA,MAAMG,IAAI,GAAG,IAAKpB,CAAAA,OAAL,CAAaiB,QAAb,CAAsB,EAAtB,CAAb,CAAA;IACA,MAAMI,EAAE,GAAG,IAAKtB,CAAAA,GAAL,CAASkB,QAAT,CAAkB,EAAlB,CAAX,CAAA;IACA,MAAMK,IAAI,GAAG,IAAKxB,CAAAA,SAAL,CAAemB,QAAf,CAAwB,EAAxB,CAAb,CAAA;AACA,IAAA,OACE,WAAW3I,KAAX,CAAiB,CAAjB,EAAoBZ,IAAI,CAAC6J,GAAL,CAAS,CAAT,EAAY,CAAIX,GAAAA,SAAS,CAACnI,MAA1B,CAApB,CACAmI,GAAAA,SADA,GAEA,QAAA,CAAStI,KAAT,CAAe,CAAf,EAAkBZ,IAAI,CAAC6J,GAAL,CAAS,CAAT,EAAY,IAAIH,IAAI,CAAC3I,MAArB,CAAlB,CAFA,GAGA2I,IAHA,GAIA,MAAA,CAAO9I,KAAP,CAAa,CAAb,EAAgBZ,IAAI,CAAC6J,GAAL,CAAS,CAAT,EAAY,IAAIF,EAAE,CAAC5I,MAAnB,CAAhB,CAJA,GAKA4I,EALA,GAMA,QAAA,CAAS/I,KAAT,CAAe,CAAf,EAAkBZ,IAAI,CAAC6J,GAAL,CAAS,CAAT,EAAY,IAAID,IAAI,CAAC7I,MAArB,CAAlB,CANA,GAOA6I,IARF,CAAA;AAUD,GAAA;;AAjEc,CAAjB,CAAA;;AAoEA,MAAMuC,QAAQ,GAAG,UAAUnD,UAAV,EAAsB;EACrC,OAAOe,MAAM,CAACC,MAAP,CAAckC,QAAd,CAAwBnD,CAAAA,KAAxB,CAA8BC,UAA9B,CAAP,CAAA;AACD;;;;"}