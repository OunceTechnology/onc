{"version":3,"file":"onc.esm.js","sources":["../src/elapsed-timer.js","../src/entropy-string/lcm.js","../src/entropy-string/char-set.js","../src/entropy-string/entropy.js","../src/entropy-string/random.js","../src/objectId.js","../src/random-string.js","../src/rbac.js","../src/shuffle.js","../src/uniqueId.js"],"sourcesContent":["const _now = (function(self) {\n  'use strict';\n\n  return self.performance && self.performance.now\n    ? function() {\n        return self.performance.now();\n      }\n    : function() {\n        return Date.now();\n      };\n})(typeof self !== 'undefined' ? self : window);\n\n// function now() {\n//   return _now();\n// }\n\nexport class ElapsedTimer {\n  start() {\n    this.startDate = new Date();\n    this.startTime = _now();\n  }\n\n  elapsed(precision) {\n    if (precision === undefined) {\n      precision = 2;\n    }\n\n    return Number((_now() - this.startTime).toFixed(precision));\n  }\n\n  elapsedFull() {\n    return _now() - this.startTime;\n  }\n}\n","const _gcd = (a, b) => {\n  while (b != 0) {\n    [a, b] = [b, a % b];\n  }\n  return Math.abs(a);\n};\n\nexport default (a, b) => {\n  return (a / _gcd(a, b)) * b;\n};\n","import lcm from './lcm.js';\n\nconst propMap = new WeakMap();\n\nconst BITS_PER_BYTE = 8;\n\nexport default class CharSet {\n  constructor(chars) {\n    if (!(typeof chars === 'string' || chars instanceof String)) {\n      throw new Error('Invalid chars: Must be string');\n    }\n    const length = chars.length;\n    if (![2, 4, 8, 16, 32, 64].includes(length)) {\n      throw new Error('Invalid char count: must be one of 2,4,8,16,32,64');\n    }\n    const bitsPerChar = Math.floor(Math.log2(length));\n    // Ensure no repeated characters\n    for (let i = 0; i < length; i++) {\n      const c = chars.charAt(i);\n      for (let j = i + 1; j < length; j++) {\n        if (c === chars.charAt(j)) {\n          throw new Error('Characters not unique');\n        }\n      }\n    }\n    const privProps = {\n      chars,\n      bitsPerChar,\n      length,\n      ndxFn: _ndxFn(bitsPerChar),\n      charsPerChunk: lcm(bitsPerChar, BITS_PER_BYTE) / bitsPerChar,\n    };\n    propMap.set(this, privProps);\n  }\n\n  getChars() {\n    return propMap.get(this).chars;\n  }\n\n  getBitsPerChar() {\n    return propMap.get(this).bitsPerChar;\n  }\n\n  getNdxFn() {\n    return propMap.get(this).ndxFn;\n  }\n\n  getCharsPerChunk() {\n    return propMap.get(this).charsPerChunk;\n  }\n\n  length() {\n    return propMap.get(this).length;\n  }\n\n  bytesNeeded(entropyBits) {\n    const count = Math.ceil(entropyBits / this.bitsPerChar());\n    return Math.ceil((count * this.bitsPerChar()) / BITS_PER_BYTE);\n  }\n\n  // Aliases\n  chars() {\n    return this.getChars();\n  }\n  ndxFn() {\n    return this.getNdxFn();\n  }\n  bitsPerChar() {\n    return this.getBitsPerChar();\n  }\n}\n\nconst _ndxFn = bitsPerChar => {\n  // If BITS_PER_BYTEs is a multiple of bitsPerChar, we can slice off an integer number\n  // of chars per byte.\n  if (lcm(bitsPerChar, BITS_PER_BYTE) === BITS_PER_BYTE) {\n    return function(chunk, slice, bytes) {\n      const lShift = bitsPerChar;\n      const rShift = BITS_PER_BYTE - bitsPerChar;\n      return ((bytes[chunk] << (lShift * slice)) & 0xff) >> rShift;\n    };\n  }\n\n  // Otherwise, while slicing off bits per char, we will possibly straddle a couple\n  // of bytes, so a bit more work is involved\n  const slicesPerChunk = lcm(bitsPerChar, BITS_PER_BYTE) / BITS_PER_BYTE;\n  return function(chunk, slice, bytes) {\n    const bNum = chunk * slicesPerChunk;\n\n    const offset = (slice * bitsPerChar) / BITS_PER_BYTE;\n    const lOffset = Math.floor(offset);\n    const rOffset = Math.ceil(offset);\n\n    const rShift = BITS_PER_BYTE - bitsPerChar;\n    const lShift = (slice * bitsPerChar) % BITS_PER_BYTE;\n\n    let ndx = ((bytes[bNum + lOffset] << lShift) & 0xff) >> rShift;\n\n    const rShiftIt = ((rOffset + 1) * BITS_PER_BYTE - (slice + 1) * bitsPerChar) % BITS_PER_BYTE;\n    if (rShift < rShiftIt) {\n      ndx += bytes[bNum + rOffset] >> rShiftIt;\n    }\n    return ndx;\n  };\n};\n\nexport const charSet64 = new CharSet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_');\nexport const charSet32 = new CharSet('2346789bdfghjmnpqrtBDFGHJLMNPQRT');\nexport const charSet16 = new CharSet('0123456789abcdef');\nexport const charSet8 = new CharSet('01234567');\nexport const charSet4 = new CharSet('ATCG');\nexport const charSet2 = new CharSet('01');\n","const _log2 = Math.log2;\n\nconst _totalOf = (numStrings, log2Risk) => {\n  if (numStrings == 0) {\n    return 0;\n  }\n\n  let N;\n  if (numStrings < 1000) {\n    N = _log2(numStrings) + _log2(numStrings - 1);\n  } else {\n    N = 2 * _log2(numStrings);\n  }\n  return N + log2Risk - 1;\n};\n\nconst bits = (total, risk) => {\n  if (total == 0) {\n    return 0;\n  }\n  return _totalOf(total, _log2(risk));\n};\n\nexport default {\n  bits,\n};\n","import CharSet, { charSet32 } from './char-set.js';\n\nconst propMap = new WeakMap();\n\nconst BITS_PER_BYTE = 8;\n\nexport default class {\n  constructor(arg) {\n    let charSet;\n    if (arg === undefined) {\n      charSet = charSet32;\n    } else if (arg instanceof CharSet) {\n      charSet = arg;\n    } else if (typeof arg === 'string' || arg instanceof String) {\n      charSet = new CharSet(arg);\n    } else {\n      throw new Error('Invalid arg: must be either valid CharSet or valid chars');\n    }\n    const hideProps = {\n      charSet,\n    };\n    propMap.set(this, hideProps);\n  }\n\n  smallID(charSet = propMap.get(this).charSet) {\n    return this.string(29, charSet);\n  }\n\n  mediumID(charSet = propMap.get(this).charSet) {\n    return this.string(69, charSet);\n  }\n\n  largeID(charSet = propMap.get(this).charSet) {\n    return this.string(99, charSet);\n  }\n\n  sessionID(charSet = propMap.get(this).charSet) {\n    return this.string(128, charSet);\n  }\n\n  token(charSet = propMap.get(this).charSet) {\n    return this.string(256, charSet);\n  }\n\n  string(entropyBits, charSet = propMap.get(this).charSet) {\n    const bytesNeeded = charSet.bytesNeeded(entropyBits);\n    return this.stringWithBytes(entropyBits, _cryptoBytes(bytesNeeded), charSet);\n  }\n\n  stringRandom(entropyBits, charSet = propMap.get(this).charSet) {\n    const bytesNeeded = charSet.bytesNeeded(entropyBits);\n    return this.stringWithBytes(entropyBits, _randomBytes(bytesNeeded), charSet);\n  }\n\n  stringWithBytes(entropyBits, bytes, charSet = propMap.get(this).charSet) {\n    return _stringWithBytes(entropyBits, bytes, charSet);\n  }\n\n  bytesNeeded(entropyBits, charSet = propMap.get(this).charSet) {\n    return charSet.bytesNeeded(entropyBits);\n  }\n\n  chars() {\n    return propMap.get(this).charSet.chars();\n  }\n\n  use(charSet) {\n    if (!(charSet instanceof CharSet)) {\n      throw new Error('Invalid CharSet');\n    }\n    propMap.get(this).charSet = charSet;\n  }\n\n  useChars(chars) {\n    if (!(typeof chars === 'string' || chars instanceof String)) {\n      throw new Error('Invalid chars: Must be string');\n    }\n    this.use(new CharSet(chars));\n  }\n}\n\nconst _stringWithBytes = (entropyBits, bytes, charSet) => {\n  if (entropyBits <= 0) {\n    return '';\n  }\n\n  const bitsPerChar = charSet.getBitsPerChar();\n  const count = Math.ceil(entropyBits / bitsPerChar);\n  if (count <= 0) {\n    return '';\n  }\n\n  const need = Math.ceil(count * (bitsPerChar / BITS_PER_BYTE));\n  if (bytes.length < need) {\n    throw new Error('Insufficient bytes: need ' + need + ' and got ' + bytes.length);\n  }\n\n  const charsPerChunk = charSet.getCharsPerChunk();\n  const chunks = Math.floor(count / charsPerChunk);\n  const partials = count % charsPerChunk;\n\n  const ndxFn = charSet.getNdxFn();\n  const chars = charSet.getChars();\n\n  let string = '';\n  for (let chunk = 0; chunk < chunks; chunk++) {\n    for (let slice = 0; slice < charsPerChunk; slice++) {\n      const ndx = ndxFn(chunk, slice, bytes);\n      string += chars[ndx];\n    }\n  }\n  for (let slice = 0; slice < partials; slice++) {\n    const ndx = ndxFn(chunks, slice, bytes);\n    string += chars[ndx];\n  }\n  return string;\n};\n\nconst _cryptoBytes = count => {\n  const buffer = new Uint8Array(count);\n  window.crypto.getRandomValues(buffer);\n  return buffer;\n};\n\nconst _randomBytes = count => {\n  const BYTES_USED_PER_RANDOM_CALL = 6;\n  const randCount = Math.ceil(count / BYTES_USED_PER_RANDOM_CALL);\n\n  const buffer = new Uint8Array(count);\n  const dataView = new DataView(new ArrayBuffer(BITS_PER_BYTE));\n  for (let rNum = 0; rNum < randCount; rNum++) {\n    dataView.setFloat64(0, Math.random());\n    for (let n = 0; n < BYTES_USED_PER_RANDOM_CALL; n++) {\n      const fByteNum = _endianByteNum[n];\n      const bByteNum = rNum * BYTES_USED_PER_RANDOM_CALL + n;\n      if (bByteNum < count) {\n        buffer[bByteNum] = dataView.getUint8(fByteNum);\n      }\n    }\n  }\n  return buffer;\n};\n\nconst _endianByteNum = (() => {\n  const buf32 = new Uint32Array(1);\n  const buf8 = new Uint8Array(buf32.buffer);\n  buf32[0] = 0xff;\n  return buf8[0] === 0xff ? [2, 3, 4, 5, 6, 7] : [0, 1, 2, 3, 6, 7];\n})();\n","'use strict';\nlet increment = 0;\nconst pid = Math.floor(Math.random() * 32767);\nconst machine = Math.floor(Math.random() * 16777216);\n\ndocument.cookie = `mongoMachineId=;expires=${new Date().toUTCString()};path=/;domain=${location.hostname}`;\nif (typeof localStorage !== 'undefined') {\n  localStorage.removeItem('mongoMachineId');\n}\n\n// if (typeof localStorage !== 'undefined') {\n//   const mongoMachineId = parseInt(localStorage.mongoMachineId);\n//   if (mongoMachineId >= 0 && mongoMachineId <= 16777215) {\n//     machine = Math.floor(localStorage.mongoMachineId);\n//   }\n//   // Just always stick the value in.\n//   localStorage.mongoMachineId = machine;\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// } else {\n//   const cookieList = document.cookie.split('; ');\n//   for (const cookie of cookieList) {\n//     const parts = cookie.split('=');\n//     if (parts[0] === 'mongoMachineId' && Number(parts[1]) >= 0 && Number(parts[1]) <= 16777215) {\n//       machine = Number(parts[1]);\n//       break;\n//     }\n//   }\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// }\n\nconst ID = {\n  // private timestamp: any\n  // private machine: number\n  // private pid: number\n  // private increment: number\n\n  setup(...args) {\n    const a0 = args[0];\n\n    if (typeof a0 === 'object') {\n      this.timestamp = a0.timestamp;\n      this.machine = a0.machine;\n      this.pid = a0.pid;\n      this.increment = a0.increment;\n    } else if (typeof a0 === 'string' && a0.length === 24) {\n      this.timestamp = Number(`0x${a0.substr(0, 8)}`);\n      this.machine = Number(`0x${a0.substr(8, 6)}`);\n      this.pid = Number(`0x${a0.substr(14, 4)}`);\n      this.increment = Number(`0x${a0.substr(18, 6)}`);\n    } else if (arguments.length === 4 && a0 !== null) {\n      this.timestamp = a0;\n      this.machine = args[1];\n      this.pid = args[2];\n      this.increment = args[3];\n    } else {\n      this.timestamp = Math.floor(new Date().valueOf() / 1000);\n      this.machine = machine;\n      this.pid = pid;\n      this.increment = increment++;\n      if (increment > 0xffffff) {\n        increment = 0;\n      }\n    }\n    return this;\n  },\n\n  getDate() {\n    return new Date(this.timestamp * 1000);\n  },\n\n  toArray() {\n    const strOid = this.toString();\n    const array = [];\n    let i;\n    for (i = 0; i < 12; i++) {\n      array[i] = parseInt(strOid.slice(i * 2, i * 2 + 2), 16);\n    }\n    return array;\n  },\n\n  toString() {\n    const timestamp = this.timestamp.toString(16);\n    const mach = this.machine.toString(16);\n    const pd = this.pid.toString(16);\n    const incr = this.increment.toString(16);\n    return (\n      '00000000'.substr(0, 8 - timestamp.length) +\n      timestamp +\n      '000000'.substr(0, 6 - mach.length) +\n      mach +\n      '0000'.substr(0, 4 - pd.length) +\n      pd +\n      '000000'.substr(0, 6 - incr.length) +\n      incr\n    );\n  },\n};\n\nconst objectID = function(args) {\n  return Object.create(ID).setup(args);\n};\n\nexport { objectID };\n","import { Random, Entropy } from './entropy-string/index.js';\n\nlet _instance;\n\nconst _random = {\n  setup(total = 1e6, risk = 1e9) {\n    this.random = new Random();\n    this.bits = Entropy.bits(total, risk);\n    return this;\n  },\n  string() {\n    return this.random.string(this.bits);\n  },\n};\n\nconst RandomString = {\n  init(total, risk) {\n    _instance = Object.create(_random).setup(total, risk);\n  },\n\n  string() {\n    if (!_instance) {\n      RandomString.init();\n    }\n    return _instance.string();\n  },\n};\n\nexport default RandomString;\n","'use strict';\n\nexport const RBAC = {\n  init(roles) {\n    // If not a function then should be object\n    if (typeof roles !== 'object') {\n      throw new TypeError('Expected input to be function or object');\n    }\n\n    const map = Object.keys(roles).reduce((map, role) => {\n      map[role] = {\n        can: {},\n      };\n\n      // Check can definition\n      if (!Array.isArray(roles[role].can)) {\n        throw new TypeError(`Expected roles[${role}].can to be an array`);\n      }\n\n      if (roles[role].inherits) {\n        if (!Array.isArray(roles[role].inherits)) {\n          throw new TypeError(`Expected roles[${role}].inherits to be an array`);\n        }\n\n        map[role].inherits = [];\n        roles[role].inherits.forEach(function(child) {\n          if (typeof child !== 'string') {\n            throw new TypeError(`Expected roles[${role}].inherits element`);\n          }\n\n          if (!roles[child]) {\n            throw new TypeError(`Undefined inheritance role: ${child}`);\n          }\n          map[role].inherits.push(child);\n        });\n      }\n\n      // Iterate allowed operations\n      roles[role].can.forEach(function(operation) {\n        // If operation is string\n        if (typeof operation === 'string') {\n          // Add as an operation\n          map[role].can[operation] = 1;\n          return;\n        }\n        // Check if operation has a .when function\n        if (typeof operation.when === 'function' && typeof operation.name === 'string') {\n          map[role].can[operation.name] = operation.when;\n          return;\n        }\n\n        throw new TypeError(`Unexpected operation type ${operation}`);\n      });\n\n      return map;\n    }, {});\n\n    // Add roles to class and mark as inited\n    this.roles = map;\n    this._inited = true;\n\n    return this;\n  },\n\n  canSync(role, operation, params) {\n    // If not inited then wait until init finishes\n    if (!this._inited) {\n      return this._init.then(() => {\n        return this.can(role, operation, params);\n      });\n    }\n\n    if (typeof role !== 'string') {\n      throw new TypeError('Expected first parameter to be string : role');\n    }\n\n    if (typeof operation !== 'string') {\n      throw new TypeError('Expected second parameter to be string : operation');\n    }\n\n    const $role = this.roles[role];\n\n    if (!$role) {\n      throw new Error('Undefined role');\n    }\n    // IF this operation is not defined at current level try higher\n    if (!$role.can[operation]) {\n      // If no parents reject\n      if (!$role.inherits || $role.inherits.length < 1) {\n        return false;\n      }\n\n      // Return if any parent resolves true or all reject\n      return $role.inherits.some(parent => {\n        return this.canSync(parent, operation, params);\n      });\n    }\n\n    // We have the operation resolve\n    if ($role.can[operation] === 1) {\n      return true;\n    }\n\n    // Operation is conditional, run async function\n    if (typeof $role.can[operation] === 'function') {\n      $role.can[operation](params, function(err, result) {\n        if (err) {\n          return false;\n        }\n        if (!result) {\n          return false;\n        }\n        return true;\n      });\n      return;\n    }\n    // No operation reject as false\n    return false;\n  },\n\n  can(role, operation, params) {\n    // If not inited then wait until init finishes\n    if (!this._inited) {\n      return this._init.then(() => {\n        return this.can(role, operation, params);\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      if (typeof role !== 'string') {\n        throw new TypeError('Expected first parameter to be string : role');\n      }\n\n      if (typeof operation !== 'string') {\n        throw new TypeError('Expected second parameter to be string : operation');\n      }\n\n      const $role = this.roles[role];\n\n      if (!$role) {\n        throw new Error('Undefined role');\n      }\n\n      // IF this operation is not defined at current level try higher\n      if (!$role.can[operation]) {\n        // If no parents reject\n        if (!$role.inherits || $role.inherits.length < 1) {\n          return reject(new Error('unauthorized'));\n        }\n\n        // Return if any parent resolves true or all reject\n        return Promise.all(\n          $role.inherits.map(parent => {\n            return this.can(parent, operation, params)\n              .then(() => true)\n              .catch(() => false);\n          }),\n        ).then(result => {\n          if (result.some(r => r)) {\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      }\n\n      // We have the operation resolve\n      if ($role.can[operation] === 1) {\n        return resolve(true);\n      }\n\n      // Operation is conditional, run async function\n      if (typeof $role.can[operation] === 'function') {\n        $role.can[operation](params, function(err, result) {\n          if (err) {\n            return reject(err);\n          }\n          if (!result) {\n            return reject(new Error('unauthorized'));\n          }\n          resolve(true);\n        });\n        return;\n      }\n      // No operation reject as false\n      reject(false);\n    });\n  },\n};\n","let _rng = Math.random;\n\nfunction rng() {\n  return _rng();\n}\n\n// Use Fisher–Yates shuffle http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n// see also http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n// to get random permutation from a finite set.\nfunction getRandomSubarray(arr, size) {\n  const shuffled = [];\n  let index = 0;\n  let rand;\n  arr.forEach(value => {\n    rand = Math.floor((index++ + 1) * _rng());\n    shuffled[index - 1] = shuffled[rand];\n    shuffled[rand] = value;\n  });\n\n  // return the part we want\n  return size ? shuffled.slice(0, size) : shuffled;\n}\n\n// Use Fisher–Yates shuffle http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n// see also http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n// to get random permutation from a finite set.\nfunction getRandomSubarrayAlt(arr, size) {\n  const shuffled = arr.slice();\n  let count = arr.length;\n  let rand;\n  let temp;\n  while (count) {\n    rand = (_rng() * count--) | 0;\n    temp = arr[count];\n    arr[count] = arr[rand];\n    arr[rand] = temp;\n  }\n\n  // return the part we want\n  return size ? shuffled.slice(0, size) : shuffled;\n}\n\nfunction setRng(newrng) {\n  _rng = newrng;\n}\n\nexport default {\n  getRandomSubarray,\n  getRandomSubarrayAlt,\n  setRng,\n  rng,\n};\n","let increment = 0;\nconst pid = Math.floor(Math.random() * 32767);\nconst machine = Math.floor(Math.random() * 16777216);\n\n// if (typeof localStorage !== 'undefined') {\n//   let mongoMachineId = parseInt(localStorage.mongoMachineId);\n//   if (mongoMachineId >= 0 && mongoMachineId <= 16777215) {\n//     machine = Math.floor(localStorage.mongoMachineId);\n//   }\n//   // Just always stick the value in.\n//   localStorage.mongoMachineId = machine;\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// } else {\n//   let cookieList = document.cookie.split('; ');\n//   for (let i in cookieList) {\n//     let cookie = cookieList[i].split('=');\n//     if (cookie[0] === 'mongoMachineId' && Number(cookie[1]) >= 0 && Number(cookie[1]) <= 16777215) {\n//       machine = Number(cookie[1]);\n//       break;\n//     }\n//   }\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// }\n\nconst ObjectId = {\n  // private timestamp: any\n  // private machine: number\n  // private pid: number\n  // private increment: number\n\n  setup(...args) {\n    const a0 = args[0];\n\n    if (typeof a0 === 'object') {\n      this.timestamp = a0.timestamp;\n      this.machine = a0.machine;\n      this.pid = a0.pid;\n      this.increment = a0.increment;\n    } else if (typeof a0 === 'string' && a0.length === 24) {\n      this.timestamp = Number(`0x${a0.substr(0, 8)}`);\n      this.machine = Number(`0x${a0.substr(8, 6)}`);\n      this.pid = Number(`0x${a0.substr(14, 4)}`);\n      this.increment = Number(`0x${a0.substr(18, 6)}`);\n    } else if (arguments.length === 4 && a0 !== null) {\n      this.timestamp = a0;\n      this.machine = args[1];\n      this.pid = args[2];\n      this.increment = args[3];\n    } else {\n      this.timestamp = Math.floor(new Date().valueOf() / 1000);\n      this.machine = machine;\n      this.pid = pid;\n      this.increment = increment++;\n      if (increment > 0xffffff) {\n        increment = 0;\n      }\n    }\n    return this;\n  },\n\n  getDate() {\n    return new Date(this.timestamp * 1000);\n  },\n\n  toArray() {\n    const strOid = this.toString();\n    const array = [];\n    let i;\n    for (i = 0; i < 12; i++) {\n      array[i] = parseInt(strOid.slice(i * 2, i * 2 + 2), 16);\n    }\n    return array;\n  },\n\n  toString() {\n    const timestamp = this.timestamp.toString(16);\n    const mach = this.machine.toString(16);\n    const pd = this.pid.toString(16);\n    const incr = this.increment.toString(16);\n    return (\n      '00000000'.substr(0, 8 - timestamp.length) +\n      timestamp +\n      '000000'.substr(0, 6 - mach.length) +\n      mach +\n      '0000'.substr(0, 4 - pd.length) +\n      pd +\n      '000000'.substr(0, 6 - incr.length) +\n      incr\n    );\n  },\n};\n\nconst objectId = function(args) {\n  return Object.create(ObjectId).setup(args);\n};\n\nexport default objectId;\n"],"names":["_now","self","performance","now","Date","window","ElapsedTimer","start","startDate","startTime","elapsed","precision","undefined","Number","toFixed","elapsedFull","_gcd","a","b","Math","abs","propMap","WeakMap","BITS_PER_BYTE","CharSet","constructor","chars","String","Error","length","includes","bitsPerChar","floor","log2","i","c","charAt","j","privProps","ndxFn","_ndxFn","charsPerChunk","lcm","set","getChars","get","getBitsPerChar","getNdxFn","getCharsPerChunk","bytesNeeded","entropyBits","count","ceil","chunk","slice","bytes","lShift","rShift","slicesPerChunk","bNum","offset","lOffset","rOffset","ndx","rShiftIt","charSet64","charSet32","charSet16","charSet8","charSet4","charSet2","_log2","_totalOf","numStrings","log2Risk","N","bits","total","risk","arg","charSet","hideProps","smallID","string","mediumID","largeID","sessionID","token","stringWithBytes","_cryptoBytes","stringRandom","_randomBytes","_stringWithBytes","use","useChars","need","chunks","partials","buffer","Uint8Array","crypto","getRandomValues","BYTES_USED_PER_RANDOM_CALL","randCount","dataView","DataView","ArrayBuffer","rNum","setFloat64","random","n","fByteNum","_endianByteNum","bByteNum","getUint8","buf32","Uint32Array","buf8","increment","pid","machine","document","cookie","toUTCString","location","hostname","localStorage","removeItem","ID","setup","args","a0","timestamp","substr","arguments","valueOf","getDate","toArray","strOid","toString","array","parseInt","mach","pd","incr","objectID","Object","create","_instance","_random","Random","Entropy","RandomString","init","RBAC","roles","TypeError","map","keys","reduce","role","can","Array","isArray","inherits","forEach","child","push","operation","when","name","_inited","canSync","params","_init","then","$role","some","parent","err","result","Promise","resolve","reject","all","catch","r","_rng","rng","getRandomSubarray","arr","size","shuffled","index","rand","value","getRandomSubarrayAlt","temp","setRng","newrng","ObjectId","objectId"],"mappings":"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"}