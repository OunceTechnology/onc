{"version":3,"file":"onc.esm.fallback.js","sources":["../src/shuffle.js","../src/elapsed-timer.js","../src/entropy-string/lcm.js","../src/entropy-string/char-set.js","../src/entropy-string/entropy.js","../src/entropy-string/random.js","../src/object-id.js","../src/random-string.js","../src/rbac.js","../src/unique-id.js"],"sourcesContent":["let _rng = Math.random;\n\nfunction rng() {\n  return _rng();\n}\n\n// Use Fisher–Yates shuffle http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n// see also http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n// to get random permutation from a finite set.\nfunction getRandomSubarray(arr, size) {\n  const shuffled = [];\n  let index = 0;\n  let rand;\n  arr.forEach(value => {\n    rand = Math.floor((index++ + 1) * _rng());\n    shuffled[index - 1] = shuffled[rand];\n    shuffled[rand] = value;\n  });\n\n  // return the part we want\n  return size ? shuffled.slice(0, size) : shuffled;\n}\n\n// Use Fisher–Yates shuffle http://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n// see also http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n// to get random permutation from a finite set.\nfunction getRandomSubarrayAlt(arr, size) {\n  const shuffled = arr.slice();\n  let count = arr.length;\n  let rand;\n  let temp;\n  while (count) {\n    rand = (_rng() * count--) | 0;\n    temp = arr[count];\n    arr[count] = arr[rand];\n    arr[rand] = temp;\n  }\n\n  // return the part we want\n  return size ? shuffled.slice(0, size) : shuffled;\n}\n\nfunction setRng(newrng) {\n  _rng = newrng;\n}\n\nexport default {\n  getRandomSubarray,\n  getRandomSubarrayAlt,\n  setRng,\n  rng,\n};\n\nexport { setRng, rng, getRandomSubarray, getRandomSubarrayAlt };\n","const _now = (function (self) {\n  return self.performance && self.performance.now\n    ? function () {\n        return self.performance.now();\n      }\n    : function () {\n        return Date.now();\n      };\n})(typeof self !== 'undefined' ? self : window);\n\nexport class ElapsedTimer {\n  /**\n   * Start the timer\n   */\n  start() {\n    this.startDate = new Date();\n    this.startTime = _now();\n  }\n\n  /**\n   *\n   * @param {Number} precision\n   * @returns {Number} Elapsed time (ms) to precision decimal places\n   */\n  elapsed(precision = 2) {\n    return Number(this.elapsedFull().toFixed(precision));\n  }\n\n  /**\n   *\n   * @returns Elapsed time in ms\n   */\n  elapsedFull() {\n    return _now() - this.startTime;\n  }\n}\n","const _gcd = (a, b) => {\n  while (b != 0) {\n    [a, b] = [b, a % b];\n  }\n  return Math.abs(a);\n};\n\nexport default (a, b) => {\n  return (a / _gcd(a, b)) * b;\n};\n","import lcm from './lcm.js';\n\nconst propertyMap = new WeakMap();\n\nconst BITS_PER_BYTE = 8;\n\nexport default class CharSet {\n  constructor(chars) {\n    if (!(typeof chars === 'string' || chars instanceof String)) {\n      throw new TypeError('Invalid chars: Must be string');\n    }\n    const length = chars.length;\n    if (![2, 4, 8, 16, 32, 64].includes(length)) {\n      throw new Error('Invalid char count: must be one of 2,4,8,16,32,64');\n    }\n    const bitsPerChar = Math.floor(Math.log2(length));\n    // Ensure no repeated characters\n    for (let index = 0; index < length; index++) {\n      const c = chars.charAt(index);\n      for (let index_ = index + 1; index_ < length; index_++) {\n        if (c === chars.charAt(index_)) {\n          throw new Error('Characters not unique');\n        }\n      }\n    }\n    const privProps = {\n      chars,\n      bitsPerChar,\n      length,\n      ndxFn: _ndxFunction(bitsPerChar),\n      charsPerChunk: lcm(bitsPerChar, BITS_PER_BYTE) / bitsPerChar,\n    };\n    propertyMap.set(this, privProps);\n  }\n\n  getChars() {\n    return propertyMap.get(this).chars;\n  }\n\n  getBitsPerChar() {\n    return propertyMap.get(this).bitsPerChar;\n  }\n\n  getNdxFn() {\n    return propertyMap.get(this).ndxFn;\n  }\n\n  getCharsPerChunk() {\n    return propertyMap.get(this).charsPerChunk;\n  }\n\n  length() {\n    return propertyMap.get(this).length;\n  }\n\n  bytesNeeded(entropyBits) {\n    const count = Math.ceil(entropyBits / this.bitsPerChar());\n    return Math.ceil((count * this.bitsPerChar()) / BITS_PER_BYTE);\n  }\n\n  // Aliases\n  chars() {\n    return this.getChars();\n  }\n  ndxFn() {\n    return this.getNdxFn();\n  }\n  bitsPerChar() {\n    return this.getBitsPerChar();\n  }\n}\n\nconst _ndxFunction = bitsPerChar => {\n  // If BITS_PER_BYTEs is a multiple of bitsPerChar, we can slice off an integer number\n  // of chars per byte.\n  if (lcm(bitsPerChar, BITS_PER_BYTE) === BITS_PER_BYTE) {\n    return function (chunk, slice, bytes) {\n      const lShift = bitsPerChar;\n      const rShift = BITS_PER_BYTE - bitsPerChar;\n      return ((bytes[chunk] << (lShift * slice)) & 0xff) >> rShift;\n    };\n  }\n\n  // Otherwise, while slicing off bits per char, we will possibly straddle a couple\n  // of bytes, so a bit more work is involved\n  const slicesPerChunk = lcm(bitsPerChar, BITS_PER_BYTE) / BITS_PER_BYTE;\n  return function (chunk, slice, bytes) {\n    const bNumber = chunk * slicesPerChunk;\n\n    const offset = (slice * bitsPerChar) / BITS_PER_BYTE;\n    const lOffset = Math.floor(offset);\n    const rOffset = Math.ceil(offset);\n\n    const rShift = BITS_PER_BYTE - bitsPerChar;\n    const lShift = (slice * bitsPerChar) % BITS_PER_BYTE;\n\n    let ndx = ((bytes[bNumber + lOffset] << lShift) & 0xff) >> rShift;\n\n    const rShiftIt = ((rOffset + 1) * BITS_PER_BYTE - (slice + 1) * bitsPerChar) % BITS_PER_BYTE;\n    if (rShift < rShiftIt) {\n      ndx += bytes[bNumber + rOffset] >> rShiftIt;\n    }\n    return ndx;\n  };\n};\n\nexport const charSet64 = new CharSet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_');\nexport const charSet32 = new CharSet('2346789bdfghjmnpqrtBDFGHJLMNPQRT');\nexport const charSet16 = new CharSet('0123456789abcdef');\nexport const charSet8 = new CharSet('01234567');\nexport const charSet4 = new CharSet('ATCG');\nexport const charSet2 = new CharSet('01');\n","const _log2 = Math.log2;\n\nconst _totalOf = (numberStrings, log2Risk) => {\n  if (numberStrings == 0) {\n    return 0;\n  }\n\n  const N = numberStrings < 1000 ? _log2(numberStrings) + _log2(numberStrings - 1) : 2 * _log2(numberStrings);\n  return N + log2Risk - 1;\n};\n\nconst bits = (total, risk) => {\n  if (total == 0) {\n    return 0;\n  }\n  return _totalOf(total, _log2(risk));\n};\n\nexport default {\n  bits,\n};\n","import CharSet, { charSet32 } from './char-set.js';\n\nconst propertyMap = new WeakMap();\n\nconst BITS_PER_BYTE = 8;\n\nexport default class {\n  constructor(argument) {\n    let charSet;\n    if (argument === undefined) {\n      charSet = charSet32;\n    } else if (argument instanceof CharSet) {\n      charSet = argument;\n    } else if (typeof argument === 'string' || argument instanceof String) {\n      charSet = new CharSet(argument);\n    } else {\n      throw new TypeError('Invalid arg: must be either valid CharSet or valid chars');\n    }\n    const hideProps = {\n      charSet,\n    };\n    propertyMap.set(this, hideProps);\n  }\n\n  smallID(charSet = propertyMap.get(this).charSet) {\n    return this.string(29, charSet);\n  }\n\n  mediumID(charSet = propertyMap.get(this).charSet) {\n    return this.string(69, charSet);\n  }\n\n  largeID(charSet = propertyMap.get(this).charSet) {\n    return this.string(99, charSet);\n  }\n\n  sessionID(charSet = propertyMap.get(this).charSet) {\n    return this.string(128, charSet);\n  }\n\n  token(charSet = propertyMap.get(this).charSet) {\n    return this.string(256, charSet);\n  }\n\n  string(entropyBits, charSet = propertyMap.get(this).charSet) {\n    const bytesNeeded = charSet.bytesNeeded(entropyBits);\n    return this.stringWithBytes(entropyBits, _cryptoBytes(bytesNeeded), charSet);\n  }\n\n  stringRandom(entropyBits, charSet = propertyMap.get(this).charSet) {\n    const bytesNeeded = charSet.bytesNeeded(entropyBits);\n    return this.stringWithBytes(entropyBits, _randomBytes(bytesNeeded), charSet);\n  }\n\n  stringWithBytes(entropyBits, bytes, charSet = propertyMap.get(this).charSet) {\n    return _stringWithBytes(entropyBits, bytes, charSet);\n  }\n\n  bytesNeeded(entropyBits, charSet = propertyMap.get(this).charSet) {\n    return charSet.bytesNeeded(entropyBits);\n  }\n\n  chars() {\n    return propertyMap.get(this).charSet.chars();\n  }\n\n  use(charSet) {\n    if (!(charSet instanceof CharSet)) {\n      throw new TypeError('Invalid CharSet');\n    }\n    propertyMap.get(this).charSet = charSet;\n  }\n\n  useChars(chars) {\n    if (!(typeof chars === 'string' || chars instanceof String)) {\n      throw new TypeError('Invalid chars: Must be string');\n    }\n    this.use(new CharSet(chars));\n  }\n}\n\nconst _stringWithBytes = (entropyBits, bytes, charSet) => {\n  if (entropyBits <= 0) {\n    return '';\n  }\n\n  const bitsPerChar = charSet.getBitsPerChar();\n  const count = Math.ceil(entropyBits / bitsPerChar);\n  if (count <= 0) {\n    return '';\n  }\n\n  const need = Math.ceil(count * (bitsPerChar / BITS_PER_BYTE));\n  if (bytes.length < need) {\n    throw new Error('Insufficient bytes: need ' + need + ' and got ' + bytes.length);\n  }\n\n  const charsPerChunk = charSet.getCharsPerChunk();\n  const chunks = Math.floor(count / charsPerChunk);\n  const partials = count % charsPerChunk;\n\n  const ndxFunction = charSet.getNdxFn();\n  const chars = charSet.getChars();\n\n  let string = '';\n  for (let chunk = 0; chunk < chunks; chunk++) {\n    for (let slice = 0; slice < charsPerChunk; slice++) {\n      const ndx = ndxFunction(chunk, slice, bytes);\n      string += chars[ndx];\n    }\n  }\n  for (let slice = 0; slice < partials; slice++) {\n    const ndx = ndxFunction(chunks, slice, bytes);\n    string += chars[ndx];\n  }\n  return string;\n};\n\nconst _cryptoBytes = count => {\n  const buffer = new Uint8Array(count);\n  window.crypto.getRandomValues(buffer);\n  return buffer;\n};\n\nconst _randomBytes = count => {\n  const BYTES_USED_PER_RANDOM_CALL = 6;\n  const randCount = Math.ceil(count / BYTES_USED_PER_RANDOM_CALL);\n\n  const buffer = new Uint8Array(count);\n  const dataView = new DataView(new ArrayBuffer(BITS_PER_BYTE));\n  for (let rNumber = 0; rNumber < randCount; rNumber++) {\n    dataView.setFloat64(0, Math.random());\n    for (let n = 0; n < BYTES_USED_PER_RANDOM_CALL; n++) {\n      const fByteNumber = _endianByteNumber[n];\n      const bByteNumber = rNumber * BYTES_USED_PER_RANDOM_CALL + n;\n      if (bByteNumber < count) {\n        buffer[bByteNumber] = dataView.getUint8(fByteNumber);\n      }\n    }\n  }\n  return buffer;\n};\n\nconst _endianByteNumber = (() => {\n  const buf32 = new Uint32Array(1);\n  const buf8 = new Uint8Array(buf32.buffer);\n  buf32[0] = 0xff;\n  return buf8[0] === 0xff ? [2, 3, 4, 5, 6, 7] : [0, 1, 2, 3, 6, 7];\n})();\n","let increment = 0;\nconst pid = Math.floor(Math.random() * 32_767);\nconst machine = Math.floor(Math.random() * 16_777_216);\n\n// eslint-disable-next-line unicorn/no-document-cookie\ndocument.cookie = `mongoMachineId=;expires=${new Date().toUTCString()};path=/;domain=${location.hostname}`;\n\nif (typeof localStorage !== 'undefined') {\n  localStorage.removeItem('mongoMachineId');\n}\n\n// if (typeof localStorage !== 'undefined') {\n//   const mongoMachineId = parseInt(localStorage.mongoMachineId);\n//   if (mongoMachineId >= 0 && mongoMachineId <= 16777215) {\n//     machine = Math.floor(localStorage.mongoMachineId);\n//   }\n//   // Just always stick the value in.\n//   localStorage.mongoMachineId = machine;\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// } else {\n//   const cookieList = document.cookie.split('; ');\n//   for (const cookie of cookieList) {\n//     const parts = cookie.split('=');\n//     if (parts[0] === 'mongoMachineId' && Number(parts[1]) >= 0 && Number(parts[1]) <= 16777215) {\n//       machine = Number(parts[1]);\n//       break;\n//     }\n//   }\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// }\n\nconst ID = {\n  // private timestamp: any\n  // private machine: number\n  // private pid: number\n  // private increment: number\n\n  setup(...arguments_) {\n    const a0 = arguments_[0];\n\n    if (typeof a0 === 'object') {\n      this.timestamp = a0.timestamp;\n      this.machine = a0.machine;\n      this.pid = a0.pid;\n      this.increment = a0.increment;\n    } else if (typeof a0 === 'string' && a0.length === 24) {\n      this.timestamp = Number(`0x${a0.slice(0, 8)}`);\n      this.machine = Number(`0x${a0.slice(8, 14)}`);\n      this.pid = Number(`0x${a0.slice(14, 18)}`);\n      this.increment = Number(`0x${a0.slice(18, 24)}`);\n    } else if (arguments.length === 4 && a0 !== null) {\n      this.timestamp = a0;\n      this.machine = arguments_[1];\n      this.pid = arguments_[2];\n      this.increment = arguments_[3];\n    } else {\n      this.timestamp = Math.floor(Date.now() / 1000);\n      this.machine = machine;\n      this.pid = pid;\n      this.increment = increment++;\n      if (increment > 0xff_ff_ff) {\n        increment = 0;\n      }\n    }\n    return this;\n  },\n\n  getDate() {\n    return new Date(this.timestamp * 1000);\n  },\n\n  toArray() {\n    const stringOid = this.toString();\n    const array = [];\n    let index;\n    for (index = 0; index < 12; index++) {\n      array[index] = Number.parseInt(stringOid.slice(index * 2, index * 2 + 2), 16);\n    }\n    return array;\n  },\n\n  toString() {\n    const timestamp = this.timestamp.toString(16);\n    const mach = this.machine.toString(16);\n    const pd = this.pid.toString(16);\n    const incr = this.increment.toString(16);\n    return (\n      '00000000'.slice(0, Math.max(0, 8 - timestamp.length)) +\n      timestamp +\n      '000000'.slice(0, Math.max(0, 6 - mach.length)) +\n      mach +\n      '0000'.slice(0, Math.max(0, 4 - pd.length)) +\n      pd +\n      '000000'.slice(0, Math.max(0, 6 - incr.length)) +\n      incr\n    );\n  },\n};\n\nconst objectID = function (arguments_) {\n  return Object.create(ID).setup(arguments_);\n};\n\nexport { objectID };\n","import { Random, Entropy } from './entropy-string/index.js';\n\nlet _instance;\n\nconst _random = {\n  setup(total = 1e6, risk = 1e9) {\n    this.random = new Random();\n    this.bits = Entropy.bits(total, risk);\n    return this;\n  },\n  string() {\n    return this.random.string(this.bits);\n  },\n};\n\nexport function init(total, risk) {\n  _instance = Object.create(_random).setup(total, risk);\n}\n\n/**\n *\n * @returns {string} A random string\n */\nexport function string() {\n  if (!_instance) {\n    init();\n  }\n  return _instance.string();\n}\n","export const RBAC = {\n  init(roles) {\n    // If not a function then should be object\n    if (typeof roles !== 'object') {\n      throw new TypeError('Expected input to be function or object');\n    }\n\n    // eslint-disable-next-line unicorn/no-array-reduce\n    const map = Object.keys(roles).reduce((map, role) => {\n      map[role] = {\n        can: {},\n      };\n\n      // Check can definition\n      if (!Array.isArray(roles[role].can)) {\n        throw new TypeError(`Expected roles[${role}].can to be an array`);\n      }\n\n      if (roles[role].inherits) {\n        if (!Array.isArray(roles[role].inherits)) {\n          throw new TypeError(`Expected roles[${role}].inherits to be an array`);\n        }\n\n        map[role].inherits = [];\n        for (const child of roles[role].inherits) {\n          if (typeof child !== 'string') {\n            throw new TypeError(`Expected roles[${role}].inherits element`);\n          }\n\n          if (!roles[child]) {\n            throw new TypeError(`Undefined inheritance role: ${child}`);\n          }\n          map[role].inherits.push(child);\n        }\n      }\n\n      // Iterate allowed operations\n      for (const operation of roles[role].can) {\n        // If operation is string\n        if (typeof operation === 'string') {\n          // Add as an operation\n          map[role].can[operation] = 1;\n          continue;\n        }\n        // Check if operation has a .when function\n        if (typeof operation.when === 'function' && typeof operation.name === 'string') {\n          map[role].can[operation.name] = operation.when;\n          continue;\n        }\n\n        throw new TypeError(`Unexpected operation type ${operation}`);\n      }\n\n      return map;\n    }, {});\n\n    // Add roles to class and mark as inited\n    this.roles = map;\n    this._inited = true;\n\n    return this;\n  },\n\n  canSync(role, operation, parameters) {\n    // If not inited then wait until init finishes\n    if (!this._inited) {\n      return this._init.then(() => {\n        return this.can(role, operation, parameters);\n      });\n    }\n\n    if (typeof role !== 'string') {\n      throw new TypeError('Expected first parameter to be string : role');\n    }\n\n    if (typeof operation !== 'string') {\n      throw new TypeError('Expected second parameter to be string : operation');\n    }\n\n    const $role = this.roles[role];\n\n    if (!$role) {\n      throw new Error('Undefined role');\n    }\n    // IF this operation is not defined at current level try higher\n    if (!$role.can[operation]) {\n      // If no parents reject\n      if (!$role.inherits || $role.inherits.length === 0) {\n        return false;\n      }\n\n      // Return if any parent resolves true or all reject\n      return $role.inherits.some(parent => {\n        return this.canSync(parent, operation, parameters);\n      });\n    }\n\n    // We have the operation resolve\n    if ($role.can[operation] === 1) {\n      return true;\n    }\n\n    // Operation is conditional, run async function\n    if (typeof $role.can[operation] === 'function') {\n      $role.can[operation](parameters, function (error, result) {\n        if (error) {\n          return false;\n        }\n        if (!result) {\n          return false;\n        }\n        return true;\n      });\n      return;\n    }\n    // No operation reject as false\n    return false;\n  },\n\n  can(role, operation, parameters) {\n    // If not inited then wait until init finishes\n    if (!this._inited) {\n      return this._init.then(() => {\n        return this.can(role, operation, parameters);\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      if (typeof role !== 'string') {\n        throw new TypeError('Expected first parameter to be string : role');\n      }\n\n      if (typeof operation !== 'string') {\n        throw new TypeError('Expected second parameter to be string : operation');\n      }\n\n      const $role = this.roles[role];\n\n      if (!$role) {\n        throw new Error('Undefined role');\n      }\n\n      // IF this operation is not defined at current level try higher\n      if (!$role.can[operation]) {\n        // If no parents reject\n        if (!$role.inherits || $role.inherits.length === 0) {\n          return reject(new Error('unauthorized'));\n        }\n\n        // Return if any parent resolves true or all reject\n        return Promise.all(\n          $role.inherits.map(parent => {\n            return this.can(parent, operation, parameters)\n              .then(() => true)\n              .catch(() => false);\n          }),\n        ).then(result => {\n          if (result.some(Boolean)) {\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      }\n\n      // We have the operation resolve\n      if ($role.can[operation] === 1) {\n        return resolve(true);\n      }\n\n      // Operation is conditional, run async function\n      if (typeof $role.can[operation] === 'function') {\n        $role.can[operation](parameters, function (error, result) {\n          if (error) {\n            return reject(error);\n          }\n          if (!result) {\n            return reject(new Error('unauthorized'));\n          }\n          resolve(true);\n        });\n        return;\n      }\n      // No operation reject as false\n      reject(false);\n    });\n  },\n};\n","let increment = 0;\nconst pid = Math.floor(Math.random() * 32_767);\nconst machine = Math.floor(Math.random() * 16_777_216);\n\n// if (typeof localStorage !== 'undefined') {\n//   let mongoMachineId = parseInt(localStorage.mongoMachineId);\n//   if (mongoMachineId >= 0 && mongoMachineId <= 16777215) {\n//     machine = Math.floor(localStorage.mongoMachineId);\n//   }\n//   // Just always stick the value in.\n//   localStorage.mongoMachineId = machine;\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// } else {\n//   let cookieList = document.cookie.split('; ');\n//   for (let i in cookieList) {\n//     let cookie = cookieList[i].split('=');\n//     if (cookie[0] === 'mongoMachineId' && Number(cookie[1]) >= 0 && Number(cookie[1]) <= 16777215) {\n//       machine = Number(cookie[1]);\n//       break;\n//     }\n//   }\n//   document.cookie = `mongoMachineId=${machine};expires=Tue, 19 Jan 2038 05:00:00 GMT`;\n// }\n\nconst ObjectId = {\n  // private timestamp: any\n  // private machine: number\n  // private pid: number\n  // private increment: number\n\n  setup(...arguments_) {\n    const a0 = arguments_[0];\n\n    if (typeof a0 === 'object') {\n      this.timestamp = a0.timestamp;\n      this.machine = a0.machine;\n      this.pid = a0.pid;\n      this.increment = a0.increment;\n    } else if (typeof a0 === 'string' && a0.length === 24) {\n      this.timestamp = Number(`0x${a0.slice(0, 8)}`);\n      this.machine = Number(`0x${a0.slice(8, 14)}`);\n      this.pid = Number(`0x${a0.slice(14, 18)}`);\n      this.increment = Number(`0x${a0.slice(18, 24)}`);\n    } else if (arguments.length === 4 && a0 !== null) {\n      this.timestamp = a0;\n      this.machine = arguments_[1];\n      this.pid = arguments_[2];\n      this.increment = arguments_[3];\n    } else {\n      this.timestamp = Math.floor(Date.now() / 1000);\n      this.machine = machine;\n      this.pid = pid;\n      this.increment = increment++;\n      if (increment > 0xff_ff_ff) {\n        increment = 0;\n      }\n    }\n    return this;\n  },\n\n  getDate() {\n    return new Date(this.timestamp * 1000);\n  },\n\n  toArray() {\n    const stringOid = this.toString();\n    const array = [];\n    let index;\n    for (index = 0; index < 12; index++) {\n      array[index] = Number.parseInt(stringOid.slice(index * 2, index * 2 + 2), 16);\n    }\n    return array;\n  },\n\n  toString() {\n    const timestamp = this.timestamp.toString(16);\n    const mach = this.machine.toString(16);\n    const pd = this.pid.toString(16);\n    const incr = this.increment.toString(16);\n    return (\n      '00000000'.slice(0, Math.max(0, 8 - timestamp.length)) +\n      timestamp +\n      '000000'.slice(0, Math.max(0, 6 - mach.length)) +\n      mach +\n      '0000'.slice(0, Math.max(0, 4 - pd.length)) +\n      pd +\n      '000000'.slice(0, Math.max(0, 6 - incr.length)) +\n      incr\n    );\n  },\n};\n\nconst objectId = function (arguments_) {\n  return Object.create(ObjectId).setup(arguments_);\n};\n\nexport default objectId;\n"],"names":["_rng","Math","random","rng","getRandomSubarray","arr","size","shuffled","index","rand","forEach","value","floor","slice","getRandomSubarrayAlt","count","length","temp","setRng","newrng","_now","self","performance","now","Date","window","ElapsedTimer","startDate","startTime","precision","Number","elapsedFull","toFixed","_gcd","a","b","abs","propertyMap","WeakMap","BITS_PER_BYTE","CharSet","chars","String","TypeError","includes","Error","bitsPerChar","log2","c","charAt","index_","privProps","ndxFn","_ndxFunction","charsPerChunk","lcm","set","get","entropyBits","ceil","getChars","getNdxFn","getBitsPerChar","chunk","bytes","lShift","rShift","slicesPerChunk","bNumber","offset","lOffset","rOffset","ndx","rShiftIt","charSet64","charSet32","charSet16","charSet8","charSet4","charSet2","_log2","_totalOf","numberStrings","log2Risk","N","bits","total","risk","argument","charSet","undefined","hideProps","string","bytesNeeded","stringWithBytes","_cryptoBytes","_randomBytes","_stringWithBytes","use","need","getCharsPerChunk","chunks","partials","ndxFunction","buffer","Uint8Array","crypto","getRandomValues","BYTES_USED_PER_RANDOM_CALL","randCount","dataView","DataView","ArrayBuffer","rNumber","setFloat64","n","fByteNumber","_endianByteNumber","bByteNumber","getUint8","buf32","Uint32Array","buf8","increment","pid","machine","document","cookie","toUTCString","location","hostname","localStorage","removeItem","ID","setup","arguments_","a0","timestamp","arguments","getDate","toArray","stringOid","toString","array","parseInt","mach","pd","incr","max","objectID","Object","create","_instance","_random","Random","Entropy","init","RBAC","roles","map","keys","reduce","role","can","Array","isArray","inherits","child","push","operation","when","name","_inited","canSync","parameters","_init","then","$role","some","parent","error","result","Promise","resolve","reject","all","catch","Boolean","ObjectId","objectId"],"mappings":"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"}